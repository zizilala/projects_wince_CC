; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\Z2170P\SRC\BOOTLOADER\EBOOT\flashmenu.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_1CE@DFLFAFMD@?$AAE?$AAx?$AAi?$AAt?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@JPPJHKGA@?$AAS?$AAe?$AAt?$AA?5?$AAE?$AAC?$AAC?$AA?5?$AAm?$AAo?$AAd?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@EGKANGDF@?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAN?$AAK?$AA?4?$AAb?$AAi?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@GBFAOEGL@?$AAF?$AAo?$AAr?$AAm?$AAa?$AAt?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@GCHGGBGE@?$AAS?$AAe?$AAt?$AA?5?$AAb?$AAa?$AAd?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@NOBBAEFH@?$AAR?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@GGLAHODL@?$AAE?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@NDJHIBFP@?$AAE?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@IKOIJPJI@?$AAD?$AAu?$AAm?$AAp?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAs?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@NOIANDIC@?$AAS?$AAh?$AAo?$AAw?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAg?$AAe?$AAo?$AAm?$AAe?$AAt?$AAr?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|g_menuFlash| [ DATA ]

  00000			 AREA	 |.data|, DATA
|g_menuFlash| DCW 0x31
	%	2
	DCD	|??_C@_1CI@NOIANDIC@?$AAS?$AAh?$AAo?$AAw?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAg?$AAe?$AAo?$AAm?$AAe?$AAt?$AAr?$AAy?$AA?$AA@|
	DCD	|ShowFlashGeometry|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCW	0x32
	%	2
	DCD	|??_C@_1CE@IKOIJPJI@?$AAD?$AAu?$AAm?$AAp?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAs?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$AA@|
	DCD	|DumpFlash|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCW	0x33
	%	2
	DCD	|??_C@_1BI@NDJHIBFP@?$AAE?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?$AA@|
	DCD	|EraseFlash|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCW	0x34
	%	2
	DCD	|??_C@_1CE@GGLAHODL@?$AAE?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@|
	DCD	|EraseBlock|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCW	0x35
	%	2
	DCD	|??_C@_1CI@NOBBAEFH@?$AAR?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@|
	DCD	|ReserveBlock|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCW	0x36
	%	2
	DCD	|??_C@_1BM@GCHGGBGE@?$AAS?$AAe?$AAt?$AA?5?$AAb?$AAa?$AAd?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?$AA@|
	DCD	|SetBadBlock|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCW	0x37
	%	2
	DCD	|??_C@_1BK@GBFAOEGL@?$AAF?$AAo?$AAr?$AAm?$AAa?$AAt?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?$AA@|
	DCD	|FormatFlash|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCW	0x38
	%	2
	DCD	|??_C@_1CO@EGKANGDF@?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAN?$AAK?$AA?4?$AAb?$AAi?$AAn?$AA?$AA@|
	DCD	|EnableFlashNK|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCW	0x39
	%	2
	DCD	|??_C@_1BK@JPPJHKGA@?$AAS?$AAe?$AAt?$AA?5?$AAE?$AAC?$AAC?$AA?5?$AAm?$AAo?$AAd?$AAe?$AA?$AA@|
	DCD	|SetECCType|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCW	0x30
	%	2
	DCD	|??_C@_1CE@DFLFAFMD@?$AAE?$AAx?$AAi?$AAt?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AA?$AA@|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCW	0x0
	%	2
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@DFLFAFMD@?$AAE?$AAx?$AAi?$AAt?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AA?$AA@| DCB "E"
	DCB	0x0, "x", 0x0, "i", 0x0, "t", 0x0, " ", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, " ", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "u", 0x0, "e", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@JPPJHKGA@?$AAS?$AAe?$AAt?$AA?5?$AAE?$AAC?$AAC?$AA?5?$AAm?$AAo?$AAd?$AAe?$AA?$AA@| DCB "S"
	DCB	0x0, "e", 0x0, "t", 0x0, " ", 0x0, "E", 0x0, "C", 0x0, "C"
	DCB	0x0, " ", 0x0, "m", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@EGKANGDF@?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAN?$AAK?$AA?4?$AAb?$AAi?$AAn?$AA?$AA@| DCB "E"
	DCB	0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e", 0x0, " "
	DCB	0x0, "f", 0x0, "l", 0x0, "a", 0x0, "s", 0x0, "h", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "N", 0x0, "K", 0x0, "."
	DCB	0x0, "b", 0x0, "i", 0x0, "n", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@GBFAOEGL@?$AAF?$AAo?$AAr?$AAm?$AAa?$AAt?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?$AA@| DCB "F"
	DCB	0x0, "o", 0x0, "r", 0x0, "m", 0x0, "a", 0x0, "t", 0x0, " "
	DCB	0x0, "f", 0x0, "l", 0x0, "a", 0x0, "s", 0x0, "h", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@GCHGGBGE@?$AAS?$AAe?$AAt?$AA?5?$AAb?$AAa?$AAd?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?$AA@| DCB "S"
	DCB	0x0, "e", 0x0, "t", 0x0, " ", 0x0, "b", 0x0, "a", 0x0, "d"
	DCB	0x0, " ", 0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@NOBBAEFH@?$AAR?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "s", 0x0, "e", 0x0, "r", 0x0, "v", 0x0, "e"
	DCB	0x0, " ", 0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k"
	DCB	0x0, " ", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "g", 0x0, "e"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@GGLAHODL@?$AAE?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@| DCB "E"
	DCB	0x0, "r", 0x0, "a", 0x0, "s", 0x0, "e", 0x0, " ", 0x0, "b"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, " ", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "g", 0x0, "e", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@NDJHIBFP@?$AAE?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?$AA@| DCB "E"
	DCB	0x0, "r", 0x0, "a", 0x0, "s", 0x0, "e", 0x0, " ", 0x0, "f"
	DCB	0x0, "l", 0x0, "a", 0x0, "s", 0x0, "h", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@IKOIJPJI@?$AAD?$AAu?$AAm?$AAp?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAs?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$AA@| DCB "D"
	DCB	0x0, "u", 0x0, "m", 0x0, "p", 0x0, " ", 0x0, "f", 0x0, "l"
	DCB	0x0, "a", 0x0, "s", 0x0, "h", 0x0, " ", 0x0, "s", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, "o", 0x0, "r", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@NOIANDIC@?$AAS?$AAh?$AAo?$AAw?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAg?$AAe?$AAo?$AAm?$AAe?$AAt?$AAr?$AAy?$AA?$AA@| DCB "S"
	DCB	0x0, "h", 0x0, "o", 0x0, "w", 0x0, " ", 0x0, "f", 0x0, "l"
	DCB	0x0, "a", 0x0, "s", 0x0, "h", 0x0, " ", 0x0, "g", 0x0, "e"
	DCB	0x0, "o", 0x0, "m", 0x0, "e", 0x0, "t", 0x0, "r", 0x0, "y"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|??_C@_1BA@ICKOCNOC@?$AA?5?$AAD?$AAo?$AAn?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@NJMFPCLL@?$AA?$AN?$AA?6?$AA?$FL?$AAr?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AAd?$AA?$FN?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_17IAIOLGBB@?$AA?5?$AA?$CF?$AAd?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@LJFBNMNP@?$AA?$AN?$AA?6?$AA?$FL?$AAb?$AAa?$AAd?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@CKACAODM@?$AA?5?$AAE?$AAC?$AAC?$AA?5?$AAm?$AAo?$AAd?$AAe?$AA?3?$AA?5?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@EDJAHKCB@?$AAH?$AAa?$AAm?$AAm?$AAi?$AAn?$AAg?$AA?5?$AA1?$AAb?$AAi?$AAt?$AA?5?$AAE?$AAC?$AAC?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@HLJGHKLA@?$AAB?$AAC?$AAH?$AA?5?$AA4?$AAb?$AAi?$AAt?$AA?5?$AAE?$AAC?$AAC?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@GHGPADLK@?$AAB?$AAC?$AAH?$AA?5?$AA8?$AAb?$AAi?$AAt?$AA?5?$AAE?$AAC?$AAC?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_15JNBOKNOG@?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@GKLBIPDL@?$AA?5?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAT?$AAy?$AAp?$AAe?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@FFMHKDOJ@?$AA?5?$AAB?$AAl?$AAo?$AAc?$AAk?$AAs?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@IKGPGDPJ@?$AA?5?$AAB?$AAy?$AAt?$AAe?$AAs?$AA?1?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?3?$AA?5?$AA?5?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@OCGGJEJ@?$AA?5?$AAS?$AAe?$AAc?$AAt?$AAo?$AAr?$AAs?$AA?1?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@KEDBKDHI@?$AA?5?$AAB?$AAy?$AAt?$AAe?$AAs?$AA?1?$AAs?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?3?$AA?5?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_19FIBFMGJP@?$AAN?$AAA?$AAN?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_17DJMAIPNJ@?$AAN?$AAO?$AAR?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@FMHOCAJM@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAg?$AAe?$AAo?$AAm?$AAe?$AAt?$AAr?$AAy?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@ECBGAOKH@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAF?$AAM?$AAD?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|FMD_Deinit|
	IMPORT	|FMD_GetBlockStatus|
	IMPORT	|g_bootCfg|
	IMPORT	|FMD_GetInfo|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|FMD_Init|
	IMPORT	|g_ulFlashBase|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_cookie|
	IMPORT	|__security_check_cookie|
; File c:\wince600\platform\z2170p\src\bootloader\eboot\flashmenu.c

  00000			 AREA	 |.pdata|, PDATA
|$T47184| DCD	|$LN30@ShowFlashG|
	DCD	0xc0007d02

  00000			 AREA	 |.xdata|, DATA
|$T47180| DCD	0xffffffe8

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@ICKOCNOC@?$AA?5?$AAD?$AAo?$AAn?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "D", 0x0, "o", 0x0, "n", 0x0, "e", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@NJMFPCLL@?$AA?$AN?$AA?6?$AA?$FL?$AAr?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AAd?$AA?$FN?$AA?$AA@| DCB 0xd
	DCB	0x0, 0xa, 0x0, "[", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "e"
	DCB	0x0, "r", 0x0, "v", 0x0, "e", 0x0, "d", 0x0, "]", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17IAIOLGBB@?$AA?5?$AA?$CF?$AAd?$AA?$AA@| DCB " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@LJFBNMNP@?$AA?$AN?$AA?6?$AA?$FL?$AAb?$AAa?$AAd?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$AA@| DCB 0xd
	DCB	0x0, 0xa, 0x0, "[", 0x0, "b", 0x0, "a", 0x0, "d", 0x0, "]"
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@CKACAODM@?$AA?5?$AAE?$AAC?$AAC?$AA?5?$AAm?$AAo?$AAd?$AAe?$AA?3?$AA?5?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "E", 0x0, "C", 0x0, "C", 0x0, " ", 0x0, "m", 0x0, "o"
	DCB	0x0, "d", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, " ", 0x0, "%"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@EDJAHKCB@?$AAH?$AAa?$AAm?$AAm?$AAi?$AAn?$AAg?$AA?5?$AA1?$AAb?$AAi?$AAt?$AA?5?$AAE?$AAC?$AAC?$AA?$AA@| DCB "H"
	DCB	0x0, "a", 0x0, "m", 0x0, "m", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "1", 0x0, "b", 0x0, "i", 0x0, "t", 0x0, " "
	DCB	0x0, "E", 0x0, "C", 0x0, "C", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@HLJGHKLA@?$AAB?$AAC?$AAH?$AA?5?$AA4?$AAb?$AAi?$AAt?$AA?5?$AAE?$AAC?$AAC?$AA?$AA@| DCB "B"
	DCB	0x0, "C", 0x0, "H", 0x0, " ", 0x0, "4", 0x0, "b", 0x0, "i"
	DCB	0x0, "t", 0x0, " ", 0x0, "E", 0x0, "C", 0x0, "C", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@GHGPADLK@?$AAB?$AAC?$AAH?$AA?5?$AA8?$AAb?$AAi?$AAt?$AA?5?$AAE?$AAC?$AAC?$AA?$AA@| DCB "B"
	DCB	0x0, "C", 0x0, "H", 0x0, " ", 0x0, "8", 0x0, "b", 0x0, "i"
	DCB	0x0, "t", 0x0, " ", 0x0, "E", 0x0, "C", 0x0, "C", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_15JNBOKNOG@?$AA?$AN?$AA?6?$AA?$AA@| DCB 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@GKLBIPDL@?$AA?5?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAT?$AAy?$AAp?$AAe?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "F", 0x0, "l", 0x0, "a", 0x0, "s", 0x0, "h", 0x0, " "
	DCB	0x0, "T", 0x0, "y", 0x0, "p", 0x0, "e", 0x0, ":", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@FFMHKDOJ@?$AA?5?$AAB?$AAl?$AAo?$AAc?$AAk?$AAs?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "B", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, "s"
	DCB	0x0, ":", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@IKGPGDPJ@?$AA?5?$AAB?$AAy?$AAt?$AAe?$AAs?$AA?1?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?3?$AA?5?$AA?5?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "B", 0x0, "y", 0x0, "t", 0x0, "e", 0x0, "s", 0x0, "/"
	DCB	0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, ":"
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@OCGGJEJ@?$AA?5?$AAS?$AAe?$AAc?$AAt?$AAo?$AAr?$AAs?$AA?1?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "S", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, "o", 0x0, "r"
	DCB	0x0, "s", 0x0, "/", 0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, "k", 0x0, ":", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@KEDBKDHI@?$AA?5?$AAB?$AAy?$AAt?$AAe?$AAs?$AA?1?$AAs?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?3?$AA?5?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "B", 0x0, "y", 0x0, "t", 0x0, "e", 0x0, "s", 0x0, "/"
	DCB	0x0, "s", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, "o", 0x0, "r"
	DCB	0x0, ":", 0x0, " ", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_19FIBFMGJP@?$AAN?$AAA?$AAN?$AAD?$AA?$AA@| DCB "N", 0x0, "A", 0x0, "N"
	DCB	0x0, "D", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17DJMAIPNJ@?$AAN?$AAO?$AAR?$AA?$AA@| DCB "N", 0x0, "O", 0x0, "R", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| DCB "U", 0x0
	DCB	"n", 0x0, "k", 0x0, "n", 0x0, "o", 0x0, "w", 0x0, "n", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@FMHOCAJM@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAg?$AAe?$AAo?$AAm?$AAe?$AAt?$AAr?$AAy?$AA?5@| DCB " "
	DCB	0x0, "O", 0x0, "o", 0x0, "p", 0x0, "s", 0x0, ",", 0x0, " "
	DCB	0x0, "c", 0x0, "a", 0x0, "n", 0x0, "'", 0x0, "t", 0x0, " "
	DCB	0x0, "g", 0x0, "e", 0x0, "t", 0x0, " ", 0x0, "f", 0x0, "l"
	DCB	0x0, "a", 0x0, "s", 0x0, "h", 0x0, " ", 0x0, "g", 0x0, "e"
	DCB	0x0, "o", 0x0, "m", 0x0, "e", 0x0, "t", 0x0, "r", 0x0, "y"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, "f", 0x0, "o", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@ECBGAOKH@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAF?$AAM?$AAD?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "O", 0x0, "o", 0x0, "p", 0x0, "s", 0x0, ",", 0x0, " "
	DCB	0x0, "c", 0x0, "a", 0x0, "n", 0x0, "'", 0x0, "t", 0x0, " "
	DCB	0x0, "o", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, " ", 0x0, "F"
	DCB	0x0, "M", 0x0, "D", 0x0, " ", 0x0, "d", 0x0, "r", 0x0, "i"
	DCB	0x0, "v", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T47180|

  00008		 |ShowFlashGeometry| PROC

; 88   : {

  00008		 |$LN30@ShowFlashG|
  00008	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  0000c	e24ddfe5	 sub         sp, sp, #0xE5, 30
  00010		 |$M47181|
  00010	e59f31e0	 ldr         r3, [pc, #0x1E0]
  00014	e5933000	 ldr         r3, [r3]
  00018	e58d3390	 str         r3, [sp, #0x390]

; 89   :     HANDLE hFMD;
; 90   :     PCI_REG_INFO regInfo;
; 91   :     FlashInfo flashInfo;
; 92   :     LPCWSTR pszType;
; 93   :     BLOCK_ID block;
; 94   :     UINT32 status;
; 95   :     UINT32 listmode=0;
; 96   : 
; 97   :     UNREFERENCED_PARAMETER(pMenu);
; 98   : 
; 99   :     regInfo.MemBase.Reg[0] = g_ulFlashBase;

  0001c	e59f31d0	 ldr         r3, [pc, #0x1D0]

; 100  :     hFMD = FMD_Init(NULL, &regInfo, NULL);

  00020	e3a02000	 mov         r2, #0
  00024	e28d1010	 add         r1, sp, #0x10
  00028	e5933000	 ldr         r3, [r3]
  0002c	e3a00000	 mov         r0, #0
  00030	e3a06000	 mov         r6, #0
  00034	e58d3320	 str         r3, [sp, #0x320]
  00038	eb000000	 bl          FMD_Init
  0003c	e1b07000	 movs        r7, r0

; 101  :     if (hFMD == NULL) 

  00040	1a000002	 bne         |$LN20@ShowFlashG|

; 102  :         {
; 103  :         OALLog(L" Oops, can't open FMD driver\r\n");

  00044	e59f01a4	 ldr         r0, [pc, #0x1A4]
  00048	eb000000	 bl          NKDbgPrintfW

; 104  :         goto cleanUp;

  0004c	ea00004f	 b           |$LN1@ShowFlashG|
  00050		 |$LN20@ShowFlashG|

; 105  :         }
; 106  : 
; 107  :     if (!FMD_GetInfo(&flashInfo)) 

  00050	e28d0000	 add         r0, sp, #0
  00054	eb000000	 bl          FMD_GetInfo
  00058	e3500000	 cmp         r0, #0

; 108  :         {
; 109  :         OALLog(L" Oops, can't get flash geometry info\r\n");

  0005c	059f0188	 ldreq       r0, [pc, #0x188]
  00060	0a000047	 beq         |$LN27@ShowFlashG|

; 110  :         goto cleanUp;
; 111  :         }
; 112  : 
; 113  :     switch (flashInfo.flashType) 

  00064	e59d3000	 ldr         r3, [sp]
  00068	e59f4178	 ldr         r4, [pc, #0x178]
  0006c	e3530000	 cmp         r3, #0
  00070	0a000004	 beq         |$LN16@ShowFlashG|
  00074	e3530001	 cmp         r3, #1

; 121  :         default:
; 122  :             pszType = L"Unknown";

  00078	11a05004	 movne       r5, r4
  0007c	1a000002	 bne         |$LN17@ShowFlashG|

; 117  :             break;
; 118  :         case NOR:
; 119  :             pszType = L"NOR";

  00080	e59f515c	 ldr         r5, [pc, #0x15C]

; 120  :             break;

  00084	ea000000	 b           |$LN17@ShowFlashG|
  00088		 |$LN16@ShowFlashG|

; 114  :         {
; 115  :         case NAND:
; 116  :             pszType = L"NAND";

  00088	e59f5150	 ldr         r5, [pc, #0x150]
  0008c		 |$LN17@ShowFlashG|

; 123  :         }
; 124  : 
; 125  :     OALLog(L"\r\n");

  0008c	e59f0148	 ldr         r0, [pc, #0x148]
  00090	eb000000	 bl          NKDbgPrintfW

; 126  :     OALLog(L" Flash Type:    %s\r\n", pszType);

  00094	e59f013c	 ldr         r0, [pc, #0x13C]
  00098	e1a01005	 mov         r1, r5
  0009c	eb000000	 bl          NKDbgPrintfW

; 127  :     OALLog(L" Blocks:        %d\r\n", flashInfo.dwNumBlocks);

  000a0	e59d1004	 ldr         r1, [sp, #4]
  000a4	e59f0128	 ldr         r0, [pc, #0x128]
  000a8	eb000000	 bl          NKDbgPrintfW

; 128  :     OALLog(L" Bytes/block:   %d\r\n", flashInfo.dwBytesPerBlock);

  000ac	e59d1008	 ldr         r1, [sp, #8]
  000b0	e59f0118	 ldr         r0, [pc, #0x118]
  000b4	eb000000	 bl          NKDbgPrintfW

; 129  :     OALLog(L" Sectors/block: %d\r\n", flashInfo.wSectorsPerBlock);

  000b8	e1dd10bc	 ldrh        r1, [sp, #0xC]
  000bc	e59f0108	 ldr         r0, [pc, #0x108]
  000c0	eb000000	 bl          NKDbgPrintfW

; 130  :     OALLog(L" Bytes/sector:  %d\r\n", flashInfo.wDataBytesPerSector);

  000c4	e1dd10be	 ldrh        r1, [sp, #0xE]
  000c8	e59f00f8	 ldr         r0, [pc, #0xF8]
  000cc	eb000000	 bl          NKDbgPrintfW

; 131  : 	
; 132  :     switch (g_bootCfg.ECCtype) 

  000d0	e59f30ec	 ldr         r3, [pc, #0xEC]
  000d4	e5d33078	 ldrb        r3, [r3, #0x78]
  000d8	e3530000	 cmp         r3, #0
  000dc	0a000007	 beq         |$LN11@ShowFlashG|
  000e0	e3530001	 cmp         r3, #1
  000e4	0a000003	 beq         |$LN10@ShowFlashG|
  000e8	e3530002	 cmp         r3, #2

; 143  : 			
; 144  :         default:
; 145  :             pszType = L"Unknown";

  000ec	1a000004	 bne         |$LN12@ShowFlashG|

; 140  :         case 2:
; 141  :             pszType = L"BCH 8bit ECC";

  000f0	e59f40c8	 ldr         r4, [pc, #0xC8]

; 142  :             break;

  000f4	ea000002	 b           |$LN12@ShowFlashG|
  000f8		 |$LN10@ShowFlashG|

; 136  :             break;
; 137  :         case 1:
; 138  :             pszType = L"BCH 4bit ECC";

  000f8	e59f40bc	 ldr         r4, [pc, #0xBC]

; 139  :             break;

  000fc	ea000000	 b           |$LN12@ShowFlashG|
  00100		 |$LN11@ShowFlashG|

; 133  :         {
; 134  :         case 0:
; 135  :             pszType = L"Hamming 1bit ECC";

  00100	e59f40b0	 ldr         r4, [pc, #0xB0]
  00104		 |$LN12@ShowFlashG|

; 146  :         }
; 147  : 	
; 148  :     OALLog(L" ECC mode:  %s\r\n", pszType);

  00104	e59f00a8	 ldr         r0, [pc, #0xA8]
  00108	e1a01004	 mov         r1, r4
  0010c	eb000000	 bl          NKDbgPrintfW

; 149  : 
; 150  :     // now list bad/reserved sectors
; 151  : 
; 152  :     // First offset given
; 153  :     block = 0;
; 154  :     while (block < flashInfo.dwNumBlocks) 

  00110	e59d3004	 ldr         r3, [sp, #4]
  00114	e3a04000	 mov         r4, #0
  00118	e3530000	 cmp         r3, #0
  0011c	0a000017	 beq         |$LN6@ShowFlashG|
  00120		 |$LL7@ShowFlashG|

; 155  :         {
; 156  : 
; 157  :         // If block is bad, we have to offset it
; 158  :         status = FMD_GetBlockStatus(block);

  00120	e1a00004	 mov         r0, r4
  00124	eb000000	 bl          FMD_GetBlockStatus

; 159  : 
; 160  :         // bad block
; 161  :         if ((status & BLOCK_STATUS_BAD) != 0) 

  00128	e3100002	 tst         r0, #2
  0012c	0a000005	 beq         |$LN5@ShowFlashG|

; 162  :             {
; 163  :             if (listmode!=1)

  00130	e3560001	 cmp         r6, #1
  00134	0a00000a	 beq         |$LN2@ShowFlashG|

; 164  :                 {
; 165  :                 OALLog(L"\r\n[bad]     ");

  00138	e59f0070	 ldr         r0, [pc, #0x70]
  0013c	eb000000	 bl          NKDbgPrintfW

; 166  :                 listmode=1;

  00140	e3a06001	 mov         r6, #1

; 167  :                 }
; 168  : 
; 169  :             OALLog(L" %d", block);
; 170  : 
; 171  :             block++;
; 172  :             continue;

  00144	ea000006	 b           |$LN2@ShowFlashG|
  00148		 |$LN5@ShowFlashG|

; 173  :             }
; 174  : 
; 175  :         // reserved block
; 176  :         if ((status & BLOCK_STATUS_RESERVED) != 0) 

  00148	e3100008	 tst         r0, #8
  0014c	0a000007	 beq         |$LN3@ShowFlashG|

; 177  :             {
; 178  :             if (listmode!=2)

  00150	e3560002	 cmp         r6, #2
  00154	0a000002	 beq         |$LN2@ShowFlashG|

; 179  :                 {
; 180  :                 OALLog(L"\r\n[reserved]");

  00158	e59f004c	 ldr         r0, [pc, #0x4C]
  0015c	eb000000	 bl          NKDbgPrintfW

; 181  :                 listmode=2;

  00160	e3a06002	 mov         r6, #2
  00164		 |$LN2@ShowFlashG|

; 182  :                 }
; 183  : 
; 184  :             OALLog(L" %d", block);

  00164	e59f003c	 ldr         r0, [pc, #0x3C]
  00168	e1a01004	 mov         r1, r4
  0016c	eb000000	 bl          NKDbgPrintfW
  00170		 |$LN3@ShowFlashG|
  00170	e59d3004	 ldr         r3, [sp, #4]

; 185  : 
; 186  :             block++;
; 187  :             continue;
; 188  :             }
; 189  : 
; 190  :         block++;

  00174	e2844001	 add         r4, r4, #1
  00178	e1540003	 cmp         r4, r3
  0017c	3affffe7	 bcc         |$LL7@ShowFlashG|
  00180		 |$LN6@ShowFlashG|

; 191  :     }
; 192  : 
; 193  :     OALLog(L" Done\r\n");

  00180	e59f001c	 ldr         r0, [pc, #0x1C]
  00184		 |$LN27@ShowFlashG|
  00184	eb000000	 bl          NKDbgPrintfW

; 194  : 
; 195  : cleanUp:
; 196  :     if (hFMD != NULL) 
; 197  :         {
; 198  :         FMD_Deinit(hFMD);

  00188	e1a00007	 mov         r0, r7
  0018c		 |$cleanUp$46806|
  0018c	eb000000	 bl          FMD_Deinit
  00190		 |$LN1@ShowFlashG|
  00190	e59d0390	 ldr         r0, [sp, #0x390]
  00194	eb000000	 bl          __security_check_cookie

; 199  :         }
; 200  :     return;
; 201  : }

  00198	e28ddfe5	 add         sp, sp, #0xE5, 30
  0019c	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  001a0	e12fff1e	 bx          lr
  001a4		 |$LN31@ShowFlashG|
  001a4		 |$LN32@ShowFlashG|
  001a4	00000000	 DCD         |??_C@_1BA@ICKOCNOC@?$AA?5?$AAD?$AAo?$AAn?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  001a8		 |$LN33@ShowFlashG|
  001a8	00000000	 DCD         |??_C@_17IAIOLGBB@?$AA?5?$AA?$CF?$AAd?$AA?$AA@|
  001ac		 |$LN34@ShowFlashG|
  001ac	00000000	 DCD         |??_C@_1BK@NJMFPCLL@?$AA?$AN?$AA?6?$AA?$FL?$AAr?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AAd?$AA?$FN?$AA?$AA@|
  001b0		 |$LN35@ShowFlashG|
  001b0	00000000	 DCD         |??_C@_1BK@LJFBNMNP@?$AA?$AN?$AA?6?$AA?$FL?$AAb?$AAa?$AAd?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$AA@|
  001b4		 |$LN36@ShowFlashG|
  001b4	00000000	 DCD         |??_C@_1CC@CKACAODM@?$AA?5?$AAE?$AAC?$AAC?$AA?5?$AAm?$AAo?$AAd?$AAe?$AA?3?$AA?5?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  001b8		 |$LN37@ShowFlashG|
  001b8	00000000	 DCD         |??_C@_1CC@EDJAHKCB@?$AAH?$AAa?$AAm?$AAm?$AAi?$AAn?$AAg?$AA?5?$AA1?$AAb?$AAi?$AAt?$AA?5?$AAE?$AAC?$AAC?$AA?$AA@|
  001bc		 |$LN38@ShowFlashG|
  001bc	00000000	 DCD         |??_C@_1BK@HLJGHKLA@?$AAB?$AAC?$AAH?$AA?5?$AA4?$AAb?$AAi?$AAt?$AA?5?$AAE?$AAC?$AAC?$AA?$AA@|
  001c0		 |$LN39@ShowFlashG|
  001c0	00000000	 DCD         |??_C@_1BK@GHGPADLK@?$AAB?$AAC?$AAH?$AA?5?$AA8?$AAb?$AAi?$AAt?$AA?5?$AAE?$AAC?$AAC?$AA?$AA@|
  001c4		 |$LN40@ShowFlashG|
  001c4	00000000	 DCD         |g_bootCfg|
  001c8		 |$LN41@ShowFlashG|
  001c8	00000000	 DCD         |??_C@_1CK@KEDBKDHI@?$AA?5?$AAB?$AAy?$AAt?$AAe?$AAs?$AA?1?$AAs?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?3?$AA?5?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  001cc		 |$LN42@ShowFlashG|
  001cc	00000000	 DCD         |??_C@_1CK@OCGGJEJ@?$AA?5?$AAS?$AAe?$AAc?$AAt?$AAo?$AAr?$AAs?$AA?1?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  001d0		 |$LN43@ShowFlashG|
  001d0	00000000	 DCD         |??_C@_1CK@IKGPGDPJ@?$AA?5?$AAB?$AAy?$AAt?$AAe?$AAs?$AA?1?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?3?$AA?5?$AA?5?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  001d4		 |$LN44@ShowFlashG|
  001d4	00000000	 DCD         |??_C@_1CK@FFMHKDOJ@?$AA?5?$AAB?$AAl?$AAo?$AAc?$AAk?$AAs?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  001d8		 |$LN45@ShowFlashG|
  001d8	00000000	 DCD         |??_C@_1CK@GKLBIPDL@?$AA?5?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAT?$AAy?$AAp?$AAe?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  001dc		 |$LN46@ShowFlashG|
  001dc	00000000	 DCD         |??_C@_15JNBOKNOG@?$AA?$AN?$AA?6?$AA?$AA@|
  001e0		 |$LN47@ShowFlashG|
  001e0	00000000	 DCD         |??_C@_19FIBFMGJP@?$AAN?$AAA?$AAN?$AAD?$AA?$AA@|
  001e4		 |$LN48@ShowFlashG|
  001e4	00000000	 DCD         |??_C@_17DJMAIPNJ@?$AAN?$AAO?$AAR?$AA?$AA@|
  001e8		 |$LN49@ShowFlashG|
  001e8	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  001ec		 |$LN50@ShowFlashG|
  001ec	00000000	 DCD         |??_C@_1EO@FMHOCAJM@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAg?$AAe?$AAo?$AAm?$AAe?$AAt?$AAr?$AAy?$AA?5@|
  001f0		 |$LN51@ShowFlashG|
  001f0	00000000	 DCD         |??_C@_1DO@ECBGAOKH@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAF?$AAM?$AAD?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  001f4		 |$LN52@ShowFlashG|
  001f4	00000000	 DCD         |g_ulFlashBase|
  001f8		 |$LN53@ShowFlashG|
  001f8	00000000	 DCD         |__security_cookie|
  001fc		 |$M47182|

			 ENDP  ; |ShowFlashGeometry|

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|??_C@_1FI@LPGEHBMI@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?9?$AA?5?$AAm?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@FDJBJKAL@?$AA?5?$AAS?$AAk?$AAi?$AAp?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AAd?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@FKCECPDI@?$AA?5?$AAS?$AAk?$AAi?$AAp?$AA?5?$AAb?$AAa?$AAd?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@KKFAKMFP@?$AA?5?$AAD?$AAo?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAw?$AAa?$AAn?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAu?$AAn?$AAr?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_19DIEGALPP@?$AA?$CF?$AAc?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|FMD_SetBlockStatus|
	IMPORT	|FMD_EraseBlock|
	IMPORT	|OALBLMenuReadKey|

  00000			 AREA	 |.pdata|, PDATA
|$T47228| DCD	|$LN21@EraseFlash|
	DCD	0xc0005802

  00000			 AREA	 |.xdata|, DATA
|$T47224| DCD	0xfffffff0

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@LPGEHBMI@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?9?$AA?5?$AAm?$AAa@| DCB " "
	DCB	0x0, "O", 0x0, "o", 0x0, "p", 0x0, "s", 0x0, ",", 0x0, " "
	DCB	0x0, "c", 0x0, "a", 0x0, "n", 0x0, "'", 0x0, "t", 0x0, " "
	DCB	0x0, "e", 0x0, "r", 0x0, "a", 0x0, "s", 0x0, "e", 0x0, " "
	DCB	0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "m"
	DCB	0x0, "a", 0x0, "r", 0x0, "k", 0x0, " ", 0x0, "a", 0x0, "s"
	DCB	0x0, " ", 0x0, "b", 0x0, "a", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@FDJBJKAL@?$AA?5?$AAS?$AAk?$AAi?$AAp?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AAd?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "S", 0x0, "k", 0x0, "i", 0x0, "p", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "s", 0x0, "e", 0x0, "r", 0x0, "v", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, "k", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@FKCECPDI@?$AA?5?$AAS?$AAk?$AAi?$AAp?$AA?5?$AAb?$AAa?$AAd?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "S", 0x0, "k", 0x0, "i", 0x0, "p", 0x0, " ", 0x0, "b"
	DCB	0x0, "a", 0x0, "d", 0x0, " ", 0x0, "b", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "k", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@KKFAKMFP@?$AA?5?$AAD?$AAo?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAw?$AAa?$AAn?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAu?$AAn?$AAr?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AAd@| DCB " "
	DCB	0x0, "D", 0x0, "o", 0x0, " ", 0x0, "y", 0x0, "o", 0x0, "u"
	DCB	0x0, " ", 0x0, "w", 0x0, "a", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "e", 0x0, "r", 0x0, "a"
	DCB	0x0, "s", 0x0, "e", 0x0, " ", 0x0, "u", 0x0, "n", 0x0, "r"
	DCB	0x0, "e", 0x0, "s", 0x0, "e", 0x0, "r", 0x0, "v", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, "k", 0x0, "s", 0x0, " ", 0x0, "[", 0x0, "-", 0x0, "/"
	DCB	0x0, "y", 0x0, "]", 0x0, "?", 0x0, " ", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_19DIEGALPP@?$AA?$CF?$AAc?$AA?$AN?$AA?6?$AA?$AA@| DCB "%", 0x0, "c", 0x0
	DCB	0xd, 0x0, 0xa, 0x0, 0x0, 0x0		; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T47224|

  00008		 |EraseFlash| PROC

; 206  : {

  00008		 |$LN21@EraseFlash|
  00008	e92d4030	 stmdb       sp!, {r4, r5, lr}
  0000c	e24ddfe5	 sub         sp, sp, #0xE5, 30
  00010		 |$M47225|
  00010	e59f314c	 ldr         r3, [pc, #0x14C]
  00014	e5933000	 ldr         r3, [r3]
  00018	e58d3390	 str         r3, [sp, #0x390]

; 207  :     WCHAR key;
; 208  :     HANDLE hFMD = NULL;
; 209  :     PCI_REG_INFO regInfo;
; 210  :     FlashInfo flashInfo;
; 211  :     BLOCK_ID block;
; 212  :     UINT32 status;
; 213  : 
; 214  :     UNREFERENCED_PARAMETER(pMenu);
; 215  : 
; 216  : 
; 217  :     OALLog(L" Do you want to erase unreserved blocks [-/y]? ");

  0001c	e59f013c	 ldr         r0, [pc, #0x13C]
  00020	eb000000	 bl          NKDbgPrintfW

; 218  : 
; 219  :     // Get key
; 220  :     key = OALBLMenuReadKey(TRUE);

  00024	e3a00001	 mov         r0, #1
  00028	eb000000	 bl          OALBLMenuReadKey
  0002c	e1a04800	 mov         r4, r0, lsl #16

; 221  :     OALLog(L"%c\r\n", key);

  00030	e59f0124	 ldr         r0, [pc, #0x124]
  00034	e1a04824	 mov         r4, r4, lsr #16
  00038	e1a01004	 mov         r1, r4
  0003c	eb000000	 bl          NKDbgPrintfW

; 222  : 
; 223  :     // Depending on result
; 224  :     if (key != L'y' && key != L'Y') goto cleanUp;

  00040	e3540079	 cmp         r4, #0x79
  00044	0a000001	 beq         |$LN9@EraseFlash|
  00048	e3540059	 cmp         r4, #0x59
  0004c	1a000036	 bne         |$LN1@EraseFlash|
  00050		 |$LN9@EraseFlash|

; 225  : 
; 226  :     // Open FMD
; 227  :     regInfo.MemBase.Reg[0] = g_ulFlashBase;

  00050	e59f3100	 ldr         r3, [pc, #0x100]

; 228  :     hFMD = FMD_Init(NULL, &regInfo, NULL);

  00054	e3a02000	 mov         r2, #0
  00058	e28d1010	 add         r1, sp, #0x10
  0005c	e5933000	 ldr         r3, [r3]
  00060	e3a00000	 mov         r0, #0
  00064	e58d3320	 str         r3, [sp, #0x320]
  00068	eb000000	 bl          FMD_Init
  0006c	e1b05000	 movs        r5, r0

; 229  :     if (hFMD == NULL) 

  00070	1a000002	 bne         |$LN8@EraseFlash|

; 230  :         {
; 231  :         OALLog(L" Oops, can't open FMD driver\r\n");

  00074	e59f00d8	 ldr         r0, [pc, #0xD8]
  00078	eb000000	 bl          NKDbgPrintfW

; 232  :         goto cleanUp;

  0007c	ea000027	 b           |$cleanUp$46863|
  00080		 |$LN8@EraseFlash|

; 233  :         }
; 234  : 
; 235  :     if (!FMD_GetInfo(&flashInfo)) 

  00080	e28d0000	 add         r0, sp, #0
  00084	eb000000	 bl          FMD_GetInfo
  00088	e3500000	 cmp         r0, #0
  0008c	1a000002	 bne         |$LN7@EraseFlash|

; 236  :         {
; 237  :         OALLog(L" Oops, can't get flash geometry info\r\n");

  00090	e59f00b8	 ldr         r0, [pc, #0xB8]
  00094	eb000000	 bl          NKDbgPrintfW
  00098	ea000020	 b           |$cleanUp$46863|
  0009c		 |$LN7@EraseFlash|

; 238  :         goto cleanUp;
; 239  :         }
; 240  : 
; 241  :     // First offset given
; 242  :     block = 0;
; 243  :     while (block < flashInfo.dwNumBlocks) 

  0009c	e59d3004	 ldr         r3, [sp, #4]
  000a0	e3a04000	 mov         r4, #0
  000a4	e3530000	 cmp         r3, #0
  000a8	0a000018	 beq         |$LN5@EraseFlash|
  000ac		 |$LL6@EraseFlash|

; 244  :         {
; 245  : 
; 246  :         // If block is bad, we have to offset it
; 247  :         status = FMD_GetBlockStatus(block);

  000ac	e1a00004	 mov         r0, r4
  000b0	eb000000	 bl          FMD_GetBlockStatus

; 248  : 
; 249  :         // Skip bad blocks
; 250  :         if ((status & BLOCK_STATUS_BAD) != 0) 

  000b4	e3100002	 tst         r0, #2
  000b8	0a000003	 beq         |$LN4@EraseFlash|

; 251  :             {
; 252  :             OALLog(L" Skip bad block %d\r\n", block);

  000bc	e59f0088	 ldr         r0, [pc, #0x88]
  000c0		 |$LN18@EraseFlash|
  000c0	e1a01004	 mov         r1, r4
  000c4	eb000000	 bl          NKDbgPrintfW

; 253  :             block++;
; 254  :             continue;

  000c8	ea00000c	 b           |$LN2@EraseFlash|
  000cc		 |$LN4@EraseFlash|

; 255  :             }
; 256  : 
; 257  :         // Skip reserved blocks
; 258  :         if ((status & BLOCK_STATUS_RESERVED) != 0) 

  000cc	e3100008	 tst         r0, #8

; 259  :             {
; 260  :             OALLog(L" Skip reserved block %d\r\n", block);

  000d0	159f0070	 ldrne       r0, [pc, #0x70]
  000d4	1afffff9	 bne         |$LN18@EraseFlash|

; 261  :             block++;
; 262  :             continue;
; 263  :             }
; 264  : 
; 265  :         // Erase block
; 266  :         if (!FMD_EraseBlock(block)) 

  000d8	e1a00004	 mov         r0, r4
  000dc	eb000000	 bl          FMD_EraseBlock
  000e0	e3500000	 cmp         r0, #0
  000e4	1a000005	 bne         |$LN2@EraseFlash|

; 267  :             {
; 268  :             OALLog(L" Oops, can't erase block %d - mark as bad\r\n", block);

  000e8	e59f0054	 ldr         r0, [pc, #0x54]
  000ec	e1a01004	 mov         r1, r4
  000f0	eb000000	 bl          NKDbgPrintfW

; 269  :             FMD_SetBlockStatus(block, BLOCK_STATUS_BAD);

  000f4	e3a01002	 mov         r1, #2
  000f8	e1a00004	 mov         r0, r4
  000fc	eb000000	 bl          FMD_SetBlockStatus
  00100		 |$LN2@EraseFlash|
  00100	e59d3004	 ldr         r3, [sp, #4]

; 270  :             }
; 271  : 
; 272  :         block++;

  00104	e2844001	 add         r4, r4, #1
  00108	e1540003	 cmp         r4, r3
  0010c	3affffe6	 bcc         |$LL6@EraseFlash|
  00110		 |$LN5@EraseFlash|

; 273  :     }
; 274  : 
; 275  :     OALLog(L" Done\r\n");

  00110	e59f0028	 ldr         r0, [pc, #0x28]
  00114	eb000000	 bl          NKDbgPrintfW

; 276  :     
; 277  :     // Block until a keypress
; 278  :     OALBLMenuReadKey(TRUE);

  00118	e3a00001	 mov         r0, #1
  0011c	eb000000	 bl          OALBLMenuReadKey
  00120		 |$cleanUp$46863|

; 279  :     
; 280  : cleanUp:
; 281  :     if (hFMD != NULL) FMD_Deinit(hFMD);

  00120	e3550000	 cmp         r5, #0
  00124	11a00005	 movne       r0, r5
  00128	1b000000	 blne        FMD_Deinit
  0012c		 |$LN1@EraseFlash|
  0012c	e59d0390	 ldr         r0, [sp, #0x390]
  00130	eb000000	 bl          __security_check_cookie

; 282  :     return;
; 283  : }

  00134	e28ddfe5	 add         sp, sp, #0xE5, 30
  00138	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0013c	e12fff1e	 bx          lr
  00140		 |$LN22@EraseFlash|
  00140		 |$LN23@EraseFlash|
  00140	00000000	 DCD         |??_C@_1BA@ICKOCNOC@?$AA?5?$AAD?$AAo?$AAn?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  00144		 |$LN24@EraseFlash|
  00144	00000000	 DCD         |??_C@_1FI@LPGEHBMI@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?9?$AA?5?$AAm?$AAa@|
  00148		 |$LN25@EraseFlash|
  00148	00000000	 DCD         |??_C@_1DE@FDJBJKAL@?$AA?5?$AAS?$AAk?$AAi?$AAp?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AAd?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0014c		 |$LN26@EraseFlash|
  0014c	00000000	 DCD         |??_C@_1CK@FKCECPDI@?$AA?5?$AAS?$AAk?$AAi?$AAp?$AA?5?$AAb?$AAa?$AAd?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00150		 |$LN27@EraseFlash|
  00150	00000000	 DCD         |??_C@_1EO@FMHOCAJM@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAg?$AAe?$AAo?$AAm?$AAe?$AAt?$AAr?$AAy?$AA?5@|
  00154		 |$LN28@EraseFlash|
  00154	00000000	 DCD         |??_C@_1DO@ECBGAOKH@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAF?$AAM?$AAD?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  00158		 |$LN29@EraseFlash|
  00158	00000000	 DCD         |g_ulFlashBase|
  0015c		 |$LN30@EraseFlash|
  0015c	00000000	 DCD         |??_C@_19DIEGALPP@?$AA?$CF?$AAc?$AA?$AN?$AA?6?$AA?$AA@|
  00160		 |$LN31@EraseFlash|
  00160	00000000	 DCD         |??_C@_1GA@KKFAKMFP@?$AA?5?$AAD?$AAo?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAw?$AAa?$AAn?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAu?$AAn?$AAr?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AAd@|
  00164		 |$LN32@EraseFlash|
  00164	00000000	 DCD         |__security_cookie|
  00168		 |$M47226|

			 ENDP  ; |EraseFlash|

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|??_C@_13JOFGPIOO@?$AA?4?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@KMEBKKAG@?$AA?5?$AAD?$AAo?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAw?$AAa?$AAn?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAb?$AAa?$AAd?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@IMHNOHDN@?$AA?5?$AAD?$AAo?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAw?$AAa?$AAn?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AAd?$AA?5?$AAb@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@FLJCJNNB@?$AA?5?$AAD?$AAo?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAw?$AAa?$AAn?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA?$CF?$AAd?$AA?9?$AA?$CF?$AAd?$AA?5?$AA?$FL@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@MPGKHCCK@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAt?$AAo?$AAo?$AA?5?$AAb?$AAi?$AAg?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAn?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@CKBOHOON@?$AA?$AN?$AA?6?$AA?5?$AAL?$AAa?$AAs?$AAt?$AA?5?$AAB?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?3?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@LGLONGJJ@?$AA?$AN?$AA?6?$AA?5?$AAF?$AAi?$AAr?$AAs?$AAt?$AA?5?$AAB?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?3?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|OALStringToUINT32|
	IMPORT	|OALBLMenuReadLine|

  00000			 AREA	 |.pdata|, PDATA
|$T47263| DCD	|$LN27@EraseBlock|
	DCD	0xc0008b02

  00000			 AREA	 |.xdata|, DATA
|$T47259| DCD	0xffffffe4

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_13JOFGPIOO@?$AA?4?$AA?$AA@| DCB ".", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@KMEBKKAG@?$AA?5?$AAD?$AAo?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAw?$AAa?$AAn?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAb?$AAa?$AAd?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5@| DCB " "
	DCB	0x0, "D", 0x0, "o", 0x0, " ", 0x0, "y", 0x0, "o", 0x0, "u"
	DCB	0x0, " ", 0x0, "w", 0x0, "a", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "e", 0x0, "r", 0x0, "a"
	DCB	0x0, "s", 0x0, "e", 0x0, " ", 0x0, "b", 0x0, "a", 0x0, "d"
	DCB	0x0, " ", 0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "[", 0x0, "-"
	DCB	0x0, "/", 0x0, "y", 0x0, "]", 0x0, "?", 0x0, " ", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@IMHNOHDN@?$AA?5?$AAD?$AAo?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAw?$AAa?$AAn?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AAd?$AA?5?$AAb@| DCB " "
	DCB	0x0, "D", 0x0, "o", 0x0, " ", 0x0, "y", 0x0, "o", 0x0, "u"
	DCB	0x0, " ", 0x0, "w", 0x0, "a", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "e", 0x0, "r", 0x0, "a"
	DCB	0x0, "s", 0x0, "e", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "s"
	DCB	0x0, "e", 0x0, "r", 0x0, "v", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, " ", 0x0, "[", 0x0, "-", 0x0, "/"
	DCB	0x0, "y", 0x0, "]", 0x0, "?", 0x0, " ", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@FLJCJNNB@?$AA?5?$AAD?$AAo?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAw?$AAa?$AAn?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA?$CF?$AAd?$AA?9?$AA?$CF?$AAd?$AA?5?$AA?$FL@| DCB " "
	DCB	0x0, "D", 0x0, "o", 0x0, " ", 0x0, "y", 0x0, "o", 0x0, "u"
	DCB	0x0, " ", 0x0, "w", 0x0, "a", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "e", 0x0, "r", 0x0, "a", 0x0, "s", 0x0, "e", 0x0, " "
	DCB	0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, "-", 0x0, "%", 0x0, "d", 0x0, " "
	DCB	0x0, "[", 0x0, "-", 0x0, "/", 0x0, "y", 0x0, "]", 0x0, "?"
	DCB	0x0, " ", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@MPGKHCCK@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAt?$AAo?$AAo?$AA?5?$AAb?$AAi?$AAg?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAn?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "O", 0x0, "o", 0x0, "p", 0x0, "s", 0x0, ",", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, "o", 0x0, " ", 0x0, "b", 0x0, "i"
	DCB	0x0, "g", 0x0, " ", 0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, "k", 0x0, " ", 0x0, "n", 0x0, "u", 0x0, "m", 0x0, "b"
	DCB	0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@CKBOHOON@?$AA?$AN?$AA?6?$AA?5?$AAL?$AAa?$AAs?$AAt?$AA?5?$AAB?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?3?$AA?5?$AA?$AA@| DCB 0xd
	DCB	0x0, 0xa, 0x0, " ", 0x0, "L", 0x0, "a", 0x0, "s", 0x0, "t"
	DCB	0x0, " ", 0x0, "B", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k"
	DCB	0x0, " ", 0x0, "N", 0x0, "u", 0x0, "m", 0x0, "b", 0x0, "e"
	DCB	0x0, "r", 0x0, ":", 0x0, " ", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@LGLONGJJ@?$AA?$AN?$AA?6?$AA?5?$AAF?$AAi?$AAr?$AAs?$AAt?$AA?5?$AAB?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?3?$AA?5?$AA?$AA@| DCB 0xd
	DCB	0x0, 0xa, 0x0, " ", 0x0, "F", 0x0, "i", 0x0, "r", 0x0, "s"
	DCB	0x0, "t", 0x0, " ", 0x0, "B", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, "k", 0x0, " ", 0x0, "N", 0x0, "u", 0x0, "m", 0x0, "b"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T47259|

  00008		 |EraseBlock| PROC

; 289  : {

  00008		 |$LN27@EraseBlock|
  00008	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  0000c	e24ddfed	 sub         sp, sp, #0xED, 30
  00010		 |$M47260|
  00010	e59f3218	 ldr         r3, [pc, #0x218]
  00014	e5933000	 ldr         r3, [r3]
  00018	e58d33b0	 str         r3, [sp, #0x3B0]

; 290  :     WCHAR key;
; 291  :     HANDLE hFMD = NULL;
; 292  :     PCI_REG_INFO regInfo;
; 293  :     FlashInfo flashInfo;
; 294  :     BLOCK_ID firstblock, lastblock=0;
; 295  :     WCHAR szInputLine[16];
; 296  :     UINT32 status;
; 297  : 
; 298  :     UNREFERENCED_PARAMETER(pMenu);
; 299  : 
; 300  :     OALLog(L"\r\n First Block Number: ");

  0001c	e59f0208	 ldr         r0, [pc, #0x208]
  00020	e3a05000	 mov         r5, #0
  00024	eb000000	 bl          NKDbgPrintfW

; 301  : 
; 302  :     if (OALBLMenuReadLine(szInputLine, dimof(szInputLine)) == 0) 

  00028	e3a01010	 mov         r1, #0x10
  0002c	e28d0e39	 add         r0, sp, #0x39, 28
  00030	eb000000	 bl          OALBLMenuReadLine
  00034	e3500000	 cmp         r0, #0
  00038	0a00006a	 beq         |$LN1@EraseBlock|

; 303  :         {
; 304  :         goto cleanUp;
; 305  :         }
; 306  : 
; 307  :     // Get block number
; 308  :     firstblock = OALStringToUINT32(szInputLine);

  0003c	e28d0e39	 add         r0, sp, #0x39, 28
  00040	eb000000	 bl          OALStringToUINT32
  00044	e1a04000	 mov         r4, r0

; 309  : 
; 310  :     OALLog(L"\r\n Last Block Number: ");

  00048	e59f01d8	 ldr         r0, [pc, #0x1D8]
  0004c	eb000000	 bl          NKDbgPrintfW

; 311  : 
; 312  :     if (OALBLMenuReadLine(szInputLine, dimof(szInputLine)) != 0) 

  00050	e3a01010	 mov         r1, #0x10
  00054	e28d0e39	 add         r0, sp, #0x39, 28
  00058	eb000000	 bl          OALBLMenuReadLine
  0005c	e3500000	 cmp         r0, #0
  00060	0a000002	 beq         |$LN14@EraseBlock|

; 313  :         {
; 314  :         // Get block number
; 315  :         lastblock = OALStringToUINT32(szInputLine);

  00064	e28d0e39	 add         r0, sp, #0x39, 28
  00068	eb000000	 bl          OALStringToUINT32
  0006c	e1a05000	 mov         r5, r0
  00070		 |$LN14@EraseBlock|

; 316  :         }
; 317  : 
; 318  :     if (lastblock < firstblock) 
; 319  :         {
; 320  :         lastblock=firstblock;
; 321  :         }
; 322  : 
; 323  :     // Open FMD
; 324  :     regInfo.MemBase.Reg[0] = g_ulFlashBase;

  00070	e59f31ac	 ldr         r3, [pc, #0x1AC]
  00074	e1550004	 cmp         r5, r4

; 325  :     hFMD = FMD_Init(NULL, &regInfo, NULL);

  00078	e3a02000	 mov         r2, #0
  0007c	e5933000	 ldr         r3, [r3]
  00080	e28d1010	 add         r1, sp, #0x10
  00084	e3a00000	 mov         r0, #0
  00088	e58d3320	 str         r3, [sp, #0x320]
  0008c	31a05004	 movcc       r5, r4
  00090	eb000000	 bl          FMD_Init
  00094	e1b07000	 movs        r7, r0

; 326  :     if (hFMD == NULL) 
; 327  :         {
; 328  :         OALLog(L" Oops, can't open FMD driver\r\n");

  00098	059f0180	 ldreq       r0, [pc, #0x180]
  0009c	0a00004d	 beq         |$LN22@EraseBlock|

; 329  :         goto cleanUp;
; 330  :         }
; 331  : 
; 332  :     if (!FMD_GetInfo(&flashInfo)) 

  000a0	e28d0000	 add         r0, sp, #0
  000a4	eb000000	 bl          FMD_GetInfo
  000a8	e3500000	 cmp         r0, #0

; 333  :         {
; 334  :         OALLog(L" Oops, can't get flash geometry info\r\n");

  000ac	059f0168	 ldreq       r0, [pc, #0x168]
  000b0	0a000048	 beq         |$LN22@EraseBlock|

; 335  :         goto cleanUp;
; 336  :         }
; 337  : 
; 338  :     if (lastblock >= flashInfo.dwNumBlocks) 

  000b4	e59d3004	 ldr         r3, [sp, #4]
  000b8	e1550003	 cmp         r5, r3

; 339  :         {
; 340  :         OALLog(L" Oops, too big block number\r\n");

  000bc	259f0154	 ldrcs       r0, [pc, #0x154]
  000c0	2a000044	 bcs         |$LN22@EraseBlock|

; 341  :         goto cleanUp;
; 342  :         }
; 343  : 
; 344  :     OALLog(L" Do you want erase block %d-%d [-/y]? ", firstblock, lastblock);

  000c4	e59f0148	 ldr         r0, [pc, #0x148]
  000c8	e1a02005	 mov         r2, r5
  000cc	e1a01004	 mov         r1, r4
  000d0	eb000000	 bl          NKDbgPrintfW

; 345  : 
; 346  :     // Get key
; 347  :     key = OALBLMenuReadKey(TRUE);

  000d4	e3a00001	 mov         r0, #1
  000d8	eb000000	 bl          OALBLMenuReadKey

; 348  :     OALLog(L"%c\r\n", key);

  000dc	e1a06800	 mov         r6, r0, lsl #16
  000e0	e59f0120	 ldr         r0, [pc, #0x120]
  000e4	e1a06826	 mov         r6, r6, lsr #16
  000e8	e1a01006	 mov         r1, r6
  000ec	eb000000	 bl          NKDbgPrintfW

; 349  : 
; 350  :     // Depending on result
; 351  :     if (key != L'y' && key != L'Y') 

  000f0	e3560079	 cmp         r6, #0x79
  000f4	0a000034	 beq         |$LN23@EraseBlock|
  000f8	e3560059	 cmp         r6, #0x59
  000fc	1a000036	 bne         |$cleanUp$46894|

; 405  :             }
; 406  : 
; 407  :         firstblock++;
; 408  :         OALLog(L".");

  00100	ea000031	 b           |$LN23@EraseBlock|

; 352  :         {
; 353  :         goto cleanUp;
; 354  :         }
; 355  : 
; 356  :     while (firstblock<=lastblock)

  00104		 |$LL8@EraseBlock|

; 357  :         {
; 358  : 
; 359  :         // If block is bad, we have to offset it
; 360  :         status = FMD_GetBlockStatus(firstblock);

  00104	e1a00004	 mov         r0, r4
  00108	eb000000	 bl          FMD_GetBlockStatus
  0010c	e1a06000	 mov         r6, r0

; 361  : 
; 362  :         // ask before erasing reserved blocks
; 363  :         if ((status & BLOCK_STATUS_RESERVED) != 0) 

  00110	e3160008	 tst         r6, #8
  00114	0a00000f	 beq         |$LN5@EraseBlock|

; 364  :             {
; 365  : 
; 366  :             OALLog(L" Do you want to erase reserved block %d [-/y]? ", firstblock);

  00118	e59f00f0	 ldr         r0, [pc, #0xF0]
  0011c	e1a01004	 mov         r1, r4
  00120	eb000000	 bl          NKDbgPrintfW

; 367  : 
; 368  :             // Get key
; 369  :             key = OALBLMenuReadKey(TRUE);

  00124	e3a00001	 mov         r0, #1
  00128	eb000000	 bl          OALBLMenuReadKey
  0012c	e1a08800	 mov         r8, r0, lsl #16

; 370  :             OALLog(L"%c\r\n", key);

  00130	e59f00d0	 ldr         r0, [pc, #0xD0]
  00134	e1a08828	 mov         r8, r8, lsr #16
  00138	e1a01008	 mov         r1, r8
  0013c	eb000000	 bl          NKDbgPrintfW

; 371  : 
; 372  :             // Depending on result
; 373  :             if (key != L'y' && key != L'Y') 

  00140	e3580079	 cmp         r8, #0x79
  00144	0a000003	 beq         |$LN5@EraseBlock|
  00148	e3580059	 cmp         r8, #0x59
  0014c	0a000001	 beq         |$LN5@EraseBlock|
  00150		 |$LN24@EraseBlock|

; 374  :                 {
; 375  :                 firstblock++;

  00150	e2844001	 add         r4, r4, #1

; 376  :                 continue;

  00154	ea00001c	 b           |$LN23@EraseBlock|
  00158		 |$LN5@EraseBlock|

; 377  :                 }
; 378  : 
; 379  :             }
; 380  : 
; 381  :         // ask before erasing bad blocks
; 382  :         if ((status & BLOCK_STATUS_BAD) != 0) 

  00158	e3160002	 tst         r6, #2
  0015c	0a00000d	 beq         |$LN3@EraseBlock|

; 383  :             {
; 384  : 
; 385  :             OALLog(L" Do you want to erase bad block %d [-/y]? ", firstblock);

  00160	e59f00a4	 ldr         r0, [pc, #0xA4]
  00164	e1a01004	 mov         r1, r4
  00168	eb000000	 bl          NKDbgPrintfW

; 386  : 
; 387  :             // Get key
; 388  :             key = OALBLMenuReadKey(TRUE);

  0016c	e3a00001	 mov         r0, #1
  00170	eb000000	 bl          OALBLMenuReadKey
  00174	e1a06800	 mov         r6, r0, lsl #16

; 389  :             OALLog(L"%c\r\n", key);

  00178	e59f0088	 ldr         r0, [pc, #0x88]
  0017c	e1a06826	 mov         r6, r6, lsr #16
  00180	e1a01006	 mov         r1, r6
  00184	eb000000	 bl          NKDbgPrintfW

; 390  : 
; 391  :             // Depending on result
; 392  :             if (key != L'y' && key != L'Y') 

  00188	e3560079	 cmp         r6, #0x79
  0018c	0a000001	 beq         |$LN3@EraseBlock|
  00190	e3560059	 cmp         r6, #0x59

; 393  :                 {
; 394  :                 firstblock++;
; 395  :                 continue;

  00194	1affffed	 bne         |$LN24@EraseBlock|
  00198		 |$LN3@EraseBlock|

; 396  :                 }
; 397  : 
; 398  :             }
; 399  : 
; 400  :         // Erase block
; 401  :         if (!FMD_EraseBlock(firstblock)) 

  00198	e1a00004	 mov         r0, r4
  0019c	eb000000	 bl          FMD_EraseBlock
  001a0	e3500000	 cmp         r0, #0
  001a4	1a000005	 bne         |$LN2@EraseBlock|

; 402  :             {
; 403  :             OALLog(L" Oops, can't erase block %d - mark as bad\r\n", firstblock);

  001a8	e59f0054	 ldr         r0, [pc, #0x54]
  001ac	e1a01004	 mov         r1, r4
  001b0	eb000000	 bl          NKDbgPrintfW

; 404  :             FMD_SetBlockStatus(firstblock, BLOCK_STATUS_BAD);

  001b4	e3a01002	 mov         r1, #2
  001b8	e1a00004	 mov         r0, r4
  001bc	eb000000	 bl          FMD_SetBlockStatus
  001c0		 |$LN2@EraseBlock|

; 405  :             }
; 406  : 
; 407  :         firstblock++;
; 408  :         OALLog(L".");

  001c0	e59f0038	 ldr         r0, [pc, #0x38]
  001c4	e2844001	 add         r4, r4, #1
  001c8	eb000000	 bl          NKDbgPrintfW
  001cc		 |$LN23@EraseBlock|

; 352  :         {
; 353  :         goto cleanUp;
; 354  :         }
; 355  : 
; 356  :     while (firstblock<=lastblock)

  001cc	e1540005	 cmp         r4, r5
  001d0	9affffcb	 bls         |$LL8@EraseBlock|

; 409  :         }
; 410  : 
; 411  :     OALLog(L" Done\r\n");

  001d4	e59f0020	 ldr         r0, [pc, #0x20]
  001d8		 |$LN22@EraseBlock|
  001d8	eb000000	 bl          NKDbgPrintfW
  001dc		 |$cleanUp$46894|

; 412  : 
; 413  : cleanUp:
; 414  :     if (hFMD != NULL) FMD_Deinit(hFMD);

  001dc	e3570000	 cmp         r7, #0
  001e0	11a00007	 movne       r0, r7
  001e4	1b000000	 blne        FMD_Deinit
  001e8		 |$LN1@EraseBlock|
  001e8	e59d03b0	 ldr         r0, [sp, #0x3B0]
  001ec	eb000000	 bl          __security_check_cookie

; 415  :     return;
; 416  : }

  001f0	e28ddfed	 add         sp, sp, #0xED, 30
  001f4	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  001f8	e12fff1e	 bx          lr
  001fc		 |$LN28@EraseBlock|
  001fc		 |$LN29@EraseBlock|
  001fc	00000000	 DCD         |??_C@_1BA@ICKOCNOC@?$AA?5?$AAD?$AAo?$AAn?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  00200		 |$LN30@EraseBlock|
  00200	00000000	 DCD         |??_C@_13JOFGPIOO@?$AA?4?$AA?$AA@|
  00204		 |$LN31@EraseBlock|
  00204	00000000	 DCD         |??_C@_1FI@LPGEHBMI@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?9?$AA?5?$AAm?$AAa@|
  00208		 |$LN32@EraseBlock|
  00208	00000000	 DCD         |??_C@_19DIEGALPP@?$AA?$CF?$AAc?$AA?$AN?$AA?6?$AA?$AA@|
  0020c		 |$LN33@EraseBlock|
  0020c	00000000	 DCD         |??_C@_1FG@KMEBKKAG@?$AA?5?$AAD?$AAo?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAw?$AAa?$AAn?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAb?$AAa?$AAd?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5@|
  00210		 |$LN34@EraseBlock|
  00210	00000000	 DCD         |??_C@_1GA@IMHNOHDN@?$AA?5?$AAD?$AAo?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAw?$AAa?$AAn?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AAd?$AA?5?$AAb@|
  00214		 |$LN35@EraseBlock|
  00214	00000000	 DCD         |??_C@_1EO@FLJCJNNB@?$AA?5?$AAD?$AAo?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAw?$AAa?$AAn?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA?$CF?$AAd?$AA?9?$AA?$CF?$AAd?$AA?5?$AA?$FL@|
  00218		 |$LN36@EraseBlock|
  00218	00000000	 DCD         |??_C@_1DM@MPGKHCCK@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAt?$AAo?$AAo?$AA?5?$AAb?$AAi?$AAg?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAn?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  0021c		 |$LN37@EraseBlock|
  0021c	00000000	 DCD         |??_C@_1EO@FMHOCAJM@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAg?$AAe?$AAo?$AAm?$AAe?$AAt?$AAr?$AAy?$AA?5@|
  00220		 |$LN38@EraseBlock|
  00220	00000000	 DCD         |??_C@_1DO@ECBGAOKH@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAF?$AAM?$AAD?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  00224		 |$LN39@EraseBlock|
  00224	00000000	 DCD         |g_ulFlashBase|
  00228		 |$LN40@EraseBlock|
  00228	00000000	 DCD         |??_C@_1CO@CKBOHOON@?$AA?$AN?$AA?6?$AA?5?$AAL?$AAa?$AAs?$AAt?$AA?5?$AAB?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?3?$AA?5?$AA?$AA@|
  0022c		 |$LN41@EraseBlock|
  0022c	00000000	 DCD         |??_C@_1DA@LGLONGJJ@?$AA?$AN?$AA?6?$AA?5?$AAF?$AAi?$AAr?$AAs?$AAt?$AA?5?$AAB?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?3?$AA?5?$AA?$AA@|
  00230		 |$LN42@EraseBlock|
  00230	00000000	 DCD         |__security_cookie|
  00234		 |$M47261|

			 ENDP  ; |EraseBlock|

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|??_C@_1FG@GECOJCBP@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAm?$AAa?$AAr?$AAk?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?9?$AA?5?$AAa?$AAs?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@KHHGLGPF@?$AA?5?$AAD?$AAo?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAw?$AAa?$AAn?$AAt?$AA?5?$AAm?$AAa?$AAr?$AAk?$AA?5?$AAa?$AAs?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AAd?$AA?5?$AAb?$AAl@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T47301| DCD	|$LN26@ReserveBlo|
	DCD	0xc0006f02

  00000			 AREA	 |.xdata|, DATA
|$T47297| DCD	0xffffffe8

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@GECOJCBP@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAm?$AAa?$AAr?$AAk?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?9?$AA?5?$AAa?$AAs?$AA?5@| DCB " "
	DCB	0x0, "O", 0x0, "o", 0x0, "p", 0x0, "s", 0x0, ",", 0x0, " "
	DCB	0x0, "c", 0x0, "a", 0x0, "n", 0x0, "'", 0x0, "t", 0x0, " "
	DCB	0x0, "m", 0x0, "a", 0x0, "r", 0x0, "k", 0x0, " ", 0x0, "b"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "a", 0x0, "s"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "e", 0x0, "r"
	DCB	0x0, "v", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@KHHGLGPF@?$AA?5?$AAD?$AAo?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAw?$AAa?$AAn?$AAt?$AA?5?$AAm?$AAa?$AAr?$AAk?$AA?5?$AAa?$AAs?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AAd?$AA?5?$AAb?$AAl@| DCB " "
	DCB	0x0, "D", 0x0, "o", 0x0, " ", 0x0, "y", 0x0, "o", 0x0, "u"
	DCB	0x0, " ", 0x0, "w", 0x0, "a", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "m", 0x0, "a", 0x0, "r", 0x0, "k", 0x0, " ", 0x0, "a"
	DCB	0x0, "s", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "e"
	DCB	0x0, "r", 0x0, "v", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "b"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, "-", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "["
	DCB	0x0, "-", 0x0, "/", 0x0, "y", 0x0, "]", 0x0, "?", 0x0, " "
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T47297|

  00008		 |ReserveBlock| PROC

; 421  : {

  00008		 |$LN26@ReserveBlo|
  00008	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  0000c	e24ddfed	 sub         sp, sp, #0xED, 30
  00010		 |$M47298|
  00010	e59f31a8	 ldr         r3, [pc, #0x1A8]
  00014	e5933000	 ldr         r3, [r3]
  00018	e58d33b0	 str         r3, [sp, #0x3B0]

; 422  :     WCHAR key;
; 423  :     HANDLE hFMD = NULL;
; 424  :     PCI_REG_INFO regInfo;
; 425  :     FlashInfo flashInfo;
; 426  :     BLOCK_ID firstblock, lastblock=0;
; 427  :     WCHAR szInputLine[16];
; 428  :     UINT32 status;
; 429  : 
; 430  :     UNREFERENCED_PARAMETER(pMenu);
; 431  : 
; 432  :     OALLog(L"\r\n First Block Number: ");

  0001c	e59f0198	 ldr         r0, [pc, #0x198]
  00020	e3a05000	 mov         r5, #0
  00024	eb000000	 bl          NKDbgPrintfW

; 433  : 
; 434  :     if (OALBLMenuReadLine(szInputLine, dimof(szInputLine)) == 0) 

  00028	e3a01010	 mov         r1, #0x10
  0002c	e28d0e39	 add         r0, sp, #0x39, 28
  00030	eb000000	 bl          OALBLMenuReadLine
  00034	e3500000	 cmp         r0, #0
  00038	0a00004e	 beq         |$LN1@ReserveBlo|

; 435  :         {
; 436  :         goto cleanUp;
; 437  :         }
; 438  : 
; 439  :     // Get block number
; 440  :     firstblock = OALStringToUINT32(szInputLine);

  0003c	e28d0e39	 add         r0, sp, #0x39, 28
  00040	eb000000	 bl          OALStringToUINT32
  00044	e1a04000	 mov         r4, r0

; 441  : 
; 442  :     OALLog(L"\r\n Last Block Number: ");

  00048	e59f0168	 ldr         r0, [pc, #0x168]
  0004c	eb000000	 bl          NKDbgPrintfW

; 443  : 
; 444  :     if (OALBLMenuReadLine(szInputLine, dimof(szInputLine)) != 0) 

  00050	e3a01010	 mov         r1, #0x10
  00054	e28d0e39	 add         r0, sp, #0x39, 28
  00058	eb000000	 bl          OALBLMenuReadLine
  0005c	e3500000	 cmp         r0, #0
  00060	0a000002	 beq         |$LN12@ReserveBlo|

; 445  :         {
; 446  :         // Get block number
; 447  :         lastblock = OALStringToUINT32(szInputLine);

  00064	e28d0e39	 add         r0, sp, #0x39, 28
  00068	eb000000	 bl          OALStringToUINT32
  0006c	e1a05000	 mov         r5, r0
  00070		 |$LN12@ReserveBlo|

; 448  :         }
; 449  : 
; 450  :     if (lastblock < firstblock) 
; 451  :         {
; 452  :         lastblock=firstblock;
; 453  :         }
; 454  : 
; 455  :     // Open FMD
; 456  :     regInfo.MemBase.Reg[0] = g_ulFlashBase;

  00070	e59f313c	 ldr         r3, [pc, #0x13C]
  00074	e1550004	 cmp         r5, r4

; 457  :     hFMD = FMD_Init(NULL, &regInfo, NULL);

  00078	e3a02000	 mov         r2, #0
  0007c	e5933000	 ldr         r3, [r3]
  00080	e28d1010	 add         r1, sp, #0x10
  00084	e3a00000	 mov         r0, #0
  00088	e58d3320	 str         r3, [sp, #0x320]
  0008c	31a05004	 movcc       r5, r4
  00090	eb000000	 bl          FMD_Init
  00094	e1b07000	 movs        r7, r0

; 458  :     if (hFMD == NULL) 
; 459  :         {
; 460  :         OALLog(L" Oops, can't open FMD driver\r\n");

  00098	059f0110	 ldreq       r0, [pc, #0x110]
  0009c	0a000031	 beq         |$LN20@ReserveBlo|

; 461  :         goto cleanUp;
; 462  :         }
; 463  : 
; 464  :     if (!FMD_GetInfo(&flashInfo)) 

  000a0	e28d0000	 add         r0, sp, #0
  000a4	eb000000	 bl          FMD_GetInfo
  000a8	e3500000	 cmp         r0, #0

; 465  :         {
; 466  :         OALLog(L" Oops, can't get flash geometry info\r\n");

  000ac	059f00f8	 ldreq       r0, [pc, #0xF8]
  000b0	0a00002c	 beq         |$LN20@ReserveBlo|

; 467  :         goto cleanUp;
; 468  :         }
; 469  : 
; 470  :     if (lastblock >= flashInfo.dwNumBlocks) 

  000b4	e59d3004	 ldr         r3, [sp, #4]
  000b8	e1550003	 cmp         r5, r3

; 471  :         {
; 472  :         OALLog(L" Oops, too big block number\r\n");

  000bc	259f00e4	 ldrcs       r0, [pc, #0xE4]
  000c0	2a000028	 bcs         |$LN20@ReserveBlo|

; 473  :         goto cleanUp;
; 474  :         }
; 475  : 
; 476  :     OALLog(L" Do you want mark as reserved block %d-%d [-/y]? ", firstblock, lastblock);

  000c4	e59f00d8	 ldr         r0, [pc, #0xD8]
  000c8	e1a02005	 mov         r2, r5
  000cc	e1a01004	 mov         r1, r4
  000d0	eb000000	 bl          NKDbgPrintfW

; 477  : 
; 478  :     // Get key
; 479  :     key = OALBLMenuReadKey(TRUE);

  000d4	e3a00001	 mov         r0, #1
  000d8	eb000000	 bl          OALBLMenuReadKey
  000dc	e1a06800	 mov         r6, r0, lsl #16

; 480  :     OALLog(L"%c\r\n", key);

  000e0	e59f00b8	 ldr         r0, [pc, #0xB8]
  000e4	e1a06826	 mov         r6, r6, lsr #16
  000e8	e1a01006	 mov         r1, r6
  000ec	eb000000	 bl          NKDbgPrintfW

; 481  : 
; 482  :     // Depending on result
; 483  :     if (key != L'y' && key != L'Y') 

  000f0	e3560079	 cmp         r6, #0x79
  000f4	0a000018	 beq         |$LN21@ReserveBlo|
  000f8	e3560059	 cmp         r6, #0x59
  000fc	1a00001a	 bne         |$cleanUp$46933|

; 515  :             }
; 516  : 
; 517  :         firstblock++;
; 518  :         OALLog(L".");

  00100	ea000015	 b           |$LN21@ReserveBlo|

; 484  :         {
; 485  :         goto cleanUp;
; 486  :         }
; 487  : 
; 488  :     while (firstblock<=lastblock)

  00104		 |$LL6@ReserveBlo|

; 489  :         {
; 490  : 
; 491  :         // If block is bad, we have to offset it
; 492  :         status = FMD_GetBlockStatus(firstblock);

  00104	e1a00004	 mov         r0, r4
  00108	eb000000	 bl          FMD_GetBlockStatus

; 493  : 
; 494  :         // Skip bad blocks
; 495  :         if ((status & BLOCK_STATUS_BAD) != 0) 

  0010c	e3100002	 tst         r0, #2
  00110	0a000004	 beq         |$LN4@ReserveBlo|

; 496  :             {
; 497  :             OALLog(L" Skip bad block %d\r\n", firstblock);

  00114	e59f0080	 ldr         r0, [pc, #0x80]
  00118		 |$LN23@ReserveBlo|
  00118	e1a01004	 mov         r1, r4
  0011c	eb000000	 bl          NKDbgPrintfW

; 498  :             // NOTE - this will cause a smaller number of blocks to actually be reserved...
; 499  :             firstblock++;

  00120	e2844001	 add         r4, r4, #1

; 500  :             continue;

  00124	ea00000c	 b           |$LN21@ReserveBlo|
  00128		 |$LN4@ReserveBlo|

; 501  :             }
; 502  : 
; 503  :         // Skip already reserved blocks
; 504  :         if ((status & BLOCK_STATUS_RESERVED) != 0) 

  00128	e3100008	 tst         r0, #8

; 505  :             {
; 506  :             OALLog(L" Skip reserved block %d\r\n", firstblock);

  0012c	159f0064	 ldrne       r0, [pc, #0x64]
  00130	1afffff8	 bne         |$LN23@ReserveBlo|

; 507  :             firstblock++;
; 508  :             continue;
; 509  :             }
; 510  : 
; 511  :         // Mark block as read-only & reserved
; 512  :         if (!FMD_SetBlockStatus(firstblock, BLOCK_STATUS_READONLY|BLOCK_STATUS_RESERVED)) 

  00134	e3a0100c	 mov         r1, #0xC
  00138	e1a00004	 mov         r0, r4
  0013c	eb000000	 bl          FMD_SetBlockStatus
  00140	e3500000	 cmp         r0, #0

; 513  :             {
; 514  :             OALLog(L" Oops, can't mark block %d - as reserved\r\n", firstblock);

  00144	059f0048	 ldreq       r0, [pc, #0x48]
  00148	01a01004	 moveq       r1, r4
  0014c	0b000000	 bleq        NKDbgPrintfW

; 515  :             }
; 516  : 
; 517  :         firstblock++;
; 518  :         OALLog(L".");

  00150	e59f0038	 ldr         r0, [pc, #0x38]
  00154	e2844001	 add         r4, r4, #1
  00158	eb000000	 bl          NKDbgPrintfW
  0015c		 |$LN21@ReserveBlo|

; 484  :         {
; 485  :         goto cleanUp;
; 486  :         }
; 487  : 
; 488  :     while (firstblock<=lastblock)

  0015c	e1540005	 cmp         r4, r5
  00160	9affffe7	 bls         |$LL6@ReserveBlo|

; 519  :         }
; 520  : 
; 521  :     OALLog(L" Done\r\n");

  00164	e59f0020	 ldr         r0, [pc, #0x20]
  00168		 |$LN20@ReserveBlo|
  00168	eb000000	 bl          NKDbgPrintfW
  0016c		 |$cleanUp$46933|

; 522  : 
; 523  : cleanUp:
; 524  :     if (hFMD != NULL) FMD_Deinit(hFMD);

  0016c	e3570000	 cmp         r7, #0
  00170	11a00007	 movne       r0, r7
  00174	1b000000	 blne        FMD_Deinit
  00178		 |$LN1@ReserveBlo|
  00178	e59d03b0	 ldr         r0, [sp, #0x3B0]
  0017c	eb000000	 bl          __security_check_cookie

; 525  :     return;
; 526  : }

  00180	e28ddfed	 add         sp, sp, #0xED, 30
  00184	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00188	e12fff1e	 bx          lr
  0018c		 |$LN27@ReserveBlo|
  0018c		 |$LN28@ReserveBlo|
  0018c	00000000	 DCD         |??_C@_1BA@ICKOCNOC@?$AA?5?$AAD?$AAo?$AAn?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  00190		 |$LN29@ReserveBlo|
  00190	00000000	 DCD         |??_C@_13JOFGPIOO@?$AA?4?$AA?$AA@|
  00194		 |$LN30@ReserveBlo|
  00194	00000000	 DCD         |??_C@_1FG@GECOJCBP@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAm?$AAa?$AAr?$AAk?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?9?$AA?5?$AAa?$AAs?$AA?5@|
  00198		 |$LN31@ReserveBlo|
  00198	00000000	 DCD         |??_C@_1DE@FDJBJKAL@?$AA?5?$AAS?$AAk?$AAi?$AAp?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AAd?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0019c		 |$LN32@ReserveBlo|
  0019c	00000000	 DCD         |??_C@_1CK@FKCECPDI@?$AA?5?$AAS?$AAk?$AAi?$AAp?$AA?5?$AAb?$AAa?$AAd?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  001a0		 |$LN33@ReserveBlo|
  001a0	00000000	 DCD         |??_C@_19DIEGALPP@?$AA?$CF?$AAc?$AA?$AN?$AA?6?$AA?$AA@|
  001a4		 |$LN34@ReserveBlo|
  001a4	00000000	 DCD         |??_C@_1GE@KHHGLGPF@?$AA?5?$AAD?$AAo?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAw?$AAa?$AAn?$AAt?$AA?5?$AAm?$AAa?$AAr?$AAk?$AA?5?$AAa?$AAs?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AAd?$AA?5?$AAb?$AAl@|
  001a8		 |$LN35@ReserveBlo|
  001a8	00000000	 DCD         |??_C@_1DM@MPGKHCCK@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAt?$AAo?$AAo?$AA?5?$AAb?$AAi?$AAg?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAn?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  001ac		 |$LN36@ReserveBlo|
  001ac	00000000	 DCD         |??_C@_1EO@FMHOCAJM@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAg?$AAe?$AAo?$AAm?$AAe?$AAt?$AAr?$AAy?$AA?5@|
  001b0		 |$LN37@ReserveBlo|
  001b0	00000000	 DCD         |??_C@_1DO@ECBGAOKH@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAF?$AAM?$AAD?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  001b4		 |$LN38@ReserveBlo|
  001b4	00000000	 DCD         |g_ulFlashBase|
  001b8		 |$LN39@ReserveBlo|
  001b8	00000000	 DCD         |??_C@_1CO@CKBOHOON@?$AA?$AN?$AA?6?$AA?5?$AAL?$AAa?$AAs?$AAt?$AA?5?$AAB?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?3?$AA?5?$AA?$AA@|
  001bc		 |$LN40@ReserveBlo|
  001bc	00000000	 DCD         |??_C@_1DA@LGLONGJJ@?$AA?$AN?$AA?6?$AA?5?$AAF?$AAi?$AAr?$AAs?$AAt?$AA?5?$AAB?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?3?$AA?5?$AA?$AA@|
  001c0		 |$LN41@ReserveBlo|
  001c0	00000000	 DCD         |__security_cookie|
  001c4		 |$M47299|

			 ENDP  ; |ReserveBlock|

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|??_C@_15DAMPJCDE@?$AA?$CF?$AAc?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_15OJKDPEFE@?$AA?5?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@FHJLFHFE@?$AA?5?$AA?$CF?$AA0?$AA2?$AAx?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@CKIPGKFF@?$AA?$CF?$AA0?$AA4?$AAx?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@JNIBIIAB@?$AA?$AN?$AA?6?$AAS?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CI?$AAs?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AA?$CF?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@NEKLJOFD@?$AAR?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AAd?$AA1?$AA?3?$AA?5?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AAO?$AAE?$AAM?$AAR?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AAd?$AA?3?$AA?5?$AA?$CF?$AA0?$AA2@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@NODDJIFB@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAs?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@OOAFHGFN@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAt?$AAo?$AAo?$AA?5?$AAb?$AAi?$AAg?$AA?5?$AAs?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@KCBMIPD@?$AA?$AN?$AA?6?$AA?5?$AAS?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?3?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@IJKIFPEH@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAs?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?5?$AAl?$AAa?$AAr?$AAg?$AAe?$AAr?$AA?5?$AAt?$AAh?$AAa?$AAn?$AA?5?$AAm@| [ DATA ] ; `string'
	IMPORT	|FMD_ReadSectorOOB|
	IMPORT	|FMD_ReadSector|
	IMPORT	|__rt_udiv|

  00000			 AREA	 |.pdata|, PDATA
|$T47358| DCD	|$LN56@DumpFlash|
	DCD	0xc000af02

  00000			 AREA	 |.xdata|, DATA
|$T47354| DCD	0xffffffd8

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_15DAMPJCDE@?$AA?$CF?$AAc?$AA?$AA@| DCB "%", 0x0, "c", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_15OJKDPEFE@?$AA?5?$AA?5?$AA?$AA@| DCB " ", 0x0, " ", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@FHJLFHFE@?$AA?5?$AA?$CF?$AA0?$AA2?$AAx?$AA?$AA@| DCB " ", 0x0, "%"
	DCB	0x0, "0", 0x0, "2", 0x0, "x", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@CKIPGKFF@?$AA?$CF?$AA0?$AA4?$AAx?$AA?5?$AA?$AA@| DCB "%", 0x0, "0"
	DCB	0x0, "4", 0x0, "x", 0x0, " ", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@JNIBIIAB@?$AA?$AN?$AA?6?$AAS?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CI?$AAs?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AA?$CF?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5@| DCB 0xd
	DCB	0x0, 0xa, 0x0, "S", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "("
	DCB	0x0, "s", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, " ", 0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@NEKLJOFD@?$AAR?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AAd?$AA1?$AA?3?$AA?5?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AAO?$AAE?$AAM?$AAR?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AAd?$AA?3?$AA?5?$AA?$CF?$AA0?$AA2@| DCB "R"
	DCB	0x0, "e", 0x0, "s", 0x0, "e", 0x0, "r", 0x0, "v", 0x0, "e"
	DCB	0x0, "d", 0x0, "1", 0x0, ":", 0x0, " ", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, " ", 0x0, "O", 0x0, "E", 0x0, "M"
	DCB	0x0, "R", 0x0, "e", 0x0, "s", 0x0, "e", 0x0, "r", 0x0, "v"
	DCB	0x0, "e", 0x0, "d", 0x0, ":", 0x0, " ", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, " ", 0x0, "B", 0x0, "a", 0x0, "d"
	DCB	0x0, ":", 0x0, " ", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x"
	DCB	0x0, " ", 0x0, "R", 0x0, "e", 0x0, "s", 0x0, "e", 0x0, "r"
	DCB	0x0, "v", 0x0, "e", 0x0, "d", 0x0, "2", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "0", 0x0, "4", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@NODDJIFB@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAs?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "O", 0x0, "o", 0x0, "p", 0x0, "s", 0x0, ",", 0x0, " "
	DCB	0x0, "s", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@OOAFHGFN@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAt?$AAo?$AAo?$AA?5?$AAb?$AAi?$AAg?$AA?5?$AAs?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "O", 0x0, "o", 0x0, "p", 0x0, "s", 0x0, ",", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, "o", 0x0, " ", 0x0, "b", 0x0, "i"
	DCB	0x0, "g", 0x0, " ", 0x0, "s", 0x0, "e", 0x0, "c", 0x0, "t"
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "n", 0x0, "u", 0x0, "m"
	DCB	0x0, "b", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@KCBMIPD@?$AA?$AN?$AA?6?$AA?5?$AAS?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?3?$AA?5?$AA?$AA@| DCB 0xd
	DCB	0x0, 0xa, 0x0, " ", 0x0, "S", 0x0, "e", 0x0, "c", 0x0, "t"
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "N", 0x0, "u", 0x0, "m"
	DCB	0x0, "b", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@IJKIFPEH@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAs?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?5?$AAl?$AAa?$AAr?$AAg?$AAe?$AAr?$AA?5?$AAt?$AAh?$AAa?$AAn?$AA?5?$AAm@| DCB " "
	DCB	0x0, "O", 0x0, "o", 0x0, "p", 0x0, "s", 0x0, ",", 0x0, " "
	DCB	0x0, "s", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, " "
	DCB	0x0, "l", 0x0, "a", 0x0, "r", 0x0, "g", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "t", 0x0, "h", 0x0, "a", 0x0, "n", 0x0, " "
	DCB	0x0, "m", 0x0, "y", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T47354|

  00008		 |DumpFlash| PROC

; 531  : {

  00008		 |$LN56@DumpFlash|
  00008	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  0000c	e24ddb03	 sub         sp, sp, #3, 22
  00010		 |$M47355|
  00010	e59f32a8	 ldr         r3, [pc, #0x2A8]
  00014	e5933000	 ldr         r3, [r3]
  00018	e58d3bfc	 str         r3, [sp, #0xBFC]

; 532  :     HANDLE hFMD = NULL;
; 533  :     PCI_REG_INFO regInfo;
; 534  :     FlashInfo flashInfo;
; 535  :     SectorInfo sectorInfo;
; 536  :     SECTOR_ADDR sector;
; 537  :     WCHAR szInputLine[16];
; 538  :     UINT8 buffer[2048], pOob[64];
; 539  :     UINT32 i, j;
; 540  : 
; 541  :     UNREFERENCED_PARAMETER(pMenu);
; 542  : 
; 543  : 
; 544  :     // Open FMD
; 545  :     regInfo.MemBase.Reg[0] = g_ulFlashBase;

  0001c	e59f3298	 ldr         r3, [pc, #0x298]

; 546  :     hFMD = FMD_Init(NULL, &regInfo, NULL);

  00020	e3a02000	 mov         r2, #0
  00024	e28d101c	 add         r1, sp, #0x1C
  00028	e5933000	 ldr         r3, [r3]
  0002c	e3a00000	 mov         r0, #0
  00030	e58d332c	 str         r3, [sp, #0x32C]
  00034	eb000000	 bl          FMD_Init
  00038	e1b08000	 movs        r8, r0

; 547  :     if (hFMD == NULL) 

  0003c	1a000002	 bne         |$LN27@DumpFlash|

; 548  :         {
; 549  :         OALLog(L" Oops, can't open FMD driver\r\n");

  00040	e59f0270	 ldr         r0, [pc, #0x270]
  00044	eb000000	 bl          NKDbgPrintfW

; 550  :         goto cleanUp;

  00048	ea000088	 b           |$LN1@DumpFlash|
  0004c		 |$LN27@DumpFlash|

; 551  :         }
; 552  : 
; 553  :     if (!FMD_GetInfo(&flashInfo)) 

  0004c	e28d000c	 add         r0, sp, #0xC
  00050	eb000000	 bl          FMD_GetInfo
  00054	e3500000	 cmp         r0, #0
  00058	1a000002	 bne         |$LN26@DumpFlash|

; 554  :         {
; 555  :         OALLog(L" Oops, can't get flash geometry info\r\n");

  0005c	e59f0250	 ldr         r0, [pc, #0x250]
  00060	eb000000	 bl          NKDbgPrintfW

; 556  :         goto cleanUp;

  00064	ea00007f	 b           |$cleanUp$46971|
  00068		 |$LN26@DumpFlash|

; 557  :         }
; 558  : 
; 559  :     if (flashInfo.wDataBytesPerSector > sizeof(buffer)) 

  00068	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  0006c	e3530b02	 cmp         r3, #2, 22
  00070	9a000002	 bls         |$LN34@DumpFlash|

; 560  :         {
; 561  :         OALLog(L" Oops, sector size larger than my buffer\r\n");

  00074	e59f0234	 ldr         r0, [pc, #0x234]
  00078	eb000000	 bl          NKDbgPrintfW
  0007c	ea000079	 b           |$cleanUp$46971|
  00080		 |$LN34@DumpFlash|

; 562  :         goto cleanUp;
; 563  :         }
; 564  : 
; 565  :         for(;;)
; 566  :         {
; 567  : 
; 568  :         OALLog(L"\r\n Sector Number: ");

  00080	e59f01fc	 ldr         r0, [pc, #0x1FC]
  00084	eb000000	 bl          NKDbgPrintfW

; 569  : 
; 570  :         if (OALBLMenuReadLine(szInputLine, dimof(szInputLine)) == 0) 

  00088	e3a01010	 mov         r1, #0x10
  0008c	e28d0fe7	 add         r0, sp, #0xE7, 30
  00090	eb000000	 bl          OALBLMenuReadLine
  00094	e3500000	 cmp         r0, #0
  00098	0a000072	 beq         |$cleanUp$46971|
  0009c	e28dbfff	 add         r11, sp, #0xFF, 30
  000a0	e28d9fff	 add         r9, sp, #0xFF, 30
  000a4	e28dafef	 add         r10, sp, #0xEF, 30
  000a8		 |$LL24@DumpFlash|

; 571  :             {
; 572  :             break;
; 573  :             }
; 574  : 
; 575  :         // Get sector number
; 576  :         sector = OALStringToUINT32(szInputLine);

  000a8	e28d0fe7	 add         r0, sp, #0xE7, 30
  000ac	eb000000	 bl          OALStringToUINT32

; 577  : 
; 578  :         // Check sector number
; 579  :         if (sector > flashInfo.dwNumBlocks * flashInfo.wSectorsPerBlock) 

  000b0	e1dd21b8	 ldrh        r2, [sp, #0x18]
  000b4	e59d3010	 ldr         r3, [sp, #0x10]
  000b8	e1a07000	 mov         r7, r0
  000bc	e0030392	 mul         r3, r2, r3
  000c0	e1570003	 cmp         r7, r3
  000c4	9a000002	 bls         |$LN21@DumpFlash|

; 580  :             {
; 581  :             OALLog(L" Oops, too big sector number\r\n");

  000c8	e59f01dc	 ldr         r0, [pc, #0x1DC]
  000cc	eb000000	 bl          NKDbgPrintfW

; 582  :             continue;

  000d0	ea00005d	 b           |$LN5@DumpFlash|
  000d4		 |$LN21@DumpFlash|

; 583  :             }
; 584  : 
; 585  :         if (!FMD_ReadSector(sector, buffer, &sectorInfo, 1)) 

  000d4	e3a03001	 mov         r3, #1
  000d8	e28d2004	 add         r2, sp, #4
  000dc	e28d1fff	 add         r1, sp, #0xFF, 30
  000e0	e1a00007	 mov         r0, r7
  000e4	eb000000	 bl          FMD_ReadSector
  000e8	e3500000	 cmp         r0, #0

; 586  :             {
; 587  :             OALLog(L" Oops, sector read failed\r\n");
; 588  :             continue;

  000ec	0a000040	 beq         |$LN53@DumpFlash|

; 589  :             }
; 590  : 
; 591  :         OALLog(
; 592  :             L"\r\nSector %d (sector %d in block %d)\r\n", sector,
; 593  :             sector%flashInfo.wSectorsPerBlock, sector/flashInfo.wSectorsPerBlock
; 594  :         );

  000f0	e1dd01b8	 ldrh        r0, [sp, #0x18]
  000f4	e1a01007	 mov         r1, r7
  000f8	eb000000	 bl          __rt_udiv
  000fc	e1a03000	 mov         r3, r0
  00100	e59f01a0	 ldr         r0, [pc, #0x1A0]
  00104	e1a02001	 mov         r2, r1
  00108	e1a01007	 mov         r1, r7
  0010c	eb000000	 bl          NKDbgPrintfW

; 595  :         OALLog(
; 596  :             L"Reserved1: %08x OEMReserved: %02x Bad: %02x Reserved2: %04x\r\n",
; 597  :             sectorInfo.dwReserved1, sectorInfo.bOEMReserved,
; 598  :             sectorInfo.bBadBlock, sectorInfo.wReserved2
; 599  :         );

  00110	e1dd00ba	 ldrh        r0, [sp, #0xA]
  00114	e5dd3009	 ldrb        r3, [sp, #9]
  00118	e5dd2008	 ldrb        r2, [sp, #8]
  0011c	e59d1004	 ldr         r1, [sp, #4]
  00120	e58d0000	 str         r0, [sp]
  00124	e59f0178	 ldr         r0, [pc, #0x178]
  00128	eb000000	 bl          NKDbgPrintfW

; 600  : 
; 601  :         for (i = 0; i < flashInfo.wDataBytesPerSector; i += 16) 

  0012c	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  00130	e3a04000	 mov         r4, #0
  00134	e3530000	 cmp         r3, #0
  00138	0a000028	 beq         |$LN17@DumpFlash|
  0013c		 |$LL19@DumpFlash|

; 602  :             {
; 603  :             OALLog(L"%04x ", i);

  0013c	e59f014c	 ldr         r0, [pc, #0x14C]
  00140	e1a01004	 mov         r1, r4
  00144	eb000000	 bl          NKDbgPrintfW

; 604  :             for (j = i; j < i + 16 && j < flashInfo.wDataBytesPerSector; j++) 

  00148	e2846010	 add         r6, r4, #0x10
  0014c	e1540006	 cmp         r4, r6
  00150	e1a05004	 mov         r5, r4
  00154	2a000008	 bcs         |$LN46@DumpFlash|
  00158		 |$LL16@DumpFlash|
  00158	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  0015c	e1550003	 cmp         r5, r3
  00160	2a000005	 bcs         |$LN46@DumpFlash|

; 605  :                 {
; 606  :                 OALLog(L" %02x", buffer[j]);

  00164	e7d5100b	 ldrb        r1, [r5, +r11]
  00168	e59f011c	 ldr         r0, [pc, #0x11C]
  0016c	eb000000	 bl          NKDbgPrintfW
  00170	e2855001	 add         r5, r5, #1
  00174	e1550006	 cmp         r5, r6
  00178	3afffff6	 bcc         |$LL16@DumpFlash|
  0017c		 |$LN46@DumpFlash|

; 607  :                 }
; 608  :             OALLog(L"  ");

  0017c	e59f011c	 ldr         r0, [pc, #0x11C]
  00180	eb000000	 bl          NKDbgPrintfW
  00184	ea00000d	 b           |$LN49@DumpFlash|
  00188		 |$LL13@DumpFlash|

; 609  :             for (j = i; j < i + 16 && j < flashInfo.wDataBytesPerSector; j++) 

  00188	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  0018c	e1540003	 cmp         r4, r3
  00190	2a00000c	 bcs         |$LN47@DumpFlash|

; 610  :                 {
; 611  :                 if (buffer[j] >= ' ' && buffer[j] < 127) 

  00194	e7d41009	 ldrb        r1, [r4, +r9]
  00198	e3510020	 cmp         r1, #0x20
  0019c	3a000004	 bcc         |$LN10@DumpFlash|
  001a0	e351007f	 cmp         r1, #0x7F
  001a4	2a000002	 bcs         |$LN10@DumpFlash|

; 612  :                     {
; 613  :                     OALLog(L"%c", buffer[j]);

  001a8	e59f00ec	 ldr         r0, [pc, #0xEC]
  001ac	eb000000	 bl          NKDbgPrintfW

; 614  :                     } 
; 615  :                 else 

  001b0	ea000001	 b           |$LN12@DumpFlash|
  001b4		 |$LN10@DumpFlash|

; 616  :                     {
; 617  :                     OALLog(L".");

  001b4	e59f00dc	 ldr         r0, [pc, #0xDC]
  001b8	eb000000	 bl          NKDbgPrintfW
  001bc		 |$LN12@DumpFlash|
  001bc	e2844001	 add         r4, r4, #1
  001c0		 |$LN49@DumpFlash|
  001c0	e1540006	 cmp         r4, r6
  001c4	3affffef	 bcc         |$LL13@DumpFlash|
  001c8		 |$LN47@DumpFlash|

; 618  :                     }
; 619  :                 }
; 620  :             OALLog(L"\r\n");

  001c8	e59f00b8	 ldr         r0, [pc, #0xB8]
  001cc	eb000000	 bl          NKDbgPrintfW
  001d0	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  001d4	e1a04006	 mov         r4, r6
  001d8	e1560003	 cmp         r6, r3
  001dc	3affffd6	 bcc         |$LL19@DumpFlash|
  001e0		 |$LN17@DumpFlash|

; 621  :             }
; 622  : 	//dump OOB data
; 623  :         if (!FMD_ReadSectorOOB(sector, pOob)) 

  001e0	e28d1fef	 add         r1, sp, #0xEF, 30
  001e4	e1a00007	 mov         r0, r7
  001e8	eb000000	 bl          FMD_ReadSectorOOB
  001ec	e3500000	 cmp         r0, #0
  001f0	1a000002	 bne         |$LN8@DumpFlash|
  001f4		 |$LN53@DumpFlash|

; 624  :             {
; 625  :             OALLog(L" Oops, sector read failed\r\n");

  001f4	e59f0098	 ldr         r0, [pc, #0x98]
  001f8	eb000000	 bl          NKDbgPrintfW
  001fc	ea000012	 b           |$LN5@DumpFlash|
  00200		 |$LN8@DumpFlash|

; 626  :             continue;
; 627  :             }
; 628  :         for (i = 0; i < 64; i += 16) 

  00200	e3a04000	 mov         r4, #0
  00204		 |$LL7@DumpFlash|

; 629  :             {
; 630  :             OALLog(L"%04x ", i);

  00204	e59f0084	 ldr         r0, [pc, #0x84]
  00208	e1a01004	 mov         r1, r4
  0020c	eb000000	 bl          NKDbgPrintfW

; 631  :             for (j = i; j < i + 16 && j < 64; j++) 

  00210	e2845010	 add         r5, r4, #0x10
  00214	ea000005	 b           |$LN50@DumpFlash|
  00218		 |$LL4@DumpFlash|
  00218	e3540040	 cmp         r4, #0x40
  0021c	2a000005	 bcs         |$LN48@DumpFlash|

; 632  :                 {
; 633  :                 OALLog(L" %02x", pOob[j]);

  00220	e7d4100a	 ldrb        r1, [r4, +r10]
  00224	e59f0060	 ldr         r0, [pc, #0x60]
  00228	eb000000	 bl          NKDbgPrintfW
  0022c	e2844001	 add         r4, r4, #1
  00230		 |$LN50@DumpFlash|
  00230	e1540005	 cmp         r4, r5
  00234	3afffff7	 bcc         |$LL4@DumpFlash|
  00238		 |$LN48@DumpFlash|

; 634  :                 }
; 635  :                 
; 636  :             OALLog(L"\r\n");

  00238	e59f0048	 ldr         r0, [pc, #0x48]
  0023c	eb000000	 bl          NKDbgPrintfW
  00240	e1a04005	 mov         r4, r5
  00244	e3550040	 cmp         r5, #0x40
  00248	3affffed	 bcc         |$LL7@DumpFlash|
  0024c		 |$LN5@DumpFlash|

; 562  :         goto cleanUp;
; 563  :         }
; 564  : 
; 565  :         for(;;)
; 566  :         {
; 567  : 
; 568  :         OALLog(L"\r\n Sector Number: ");

  0024c	e59f0030	 ldr         r0, [pc, #0x30]
  00250	eb000000	 bl          NKDbgPrintfW

; 569  : 
; 570  :         if (OALBLMenuReadLine(szInputLine, dimof(szInputLine)) == 0) 

  00254	e3a01010	 mov         r1, #0x10
  00258	e28d0fe7	 add         r0, sp, #0xE7, 30
  0025c	eb000000	 bl          OALBLMenuReadLine
  00260	e3500000	 cmp         r0, #0
  00264	1affff8f	 bne         |$LL24@DumpFlash|
  00268		 |$cleanUp$46971|

; 637  :             }
; 638  : 
; 639  :         }
; 640  : 
; 641  : cleanUp:
; 642  : 
; 643  :     if (hFMD != NULL) 
; 644  :         {
; 645  :         FMD_Deinit(hFMD);

  00268	e1a00008	 mov         r0, r8
  0026c	eb000000	 bl          FMD_Deinit
  00270		 |$LN1@DumpFlash|
  00270	e59d0bfc	 ldr         r0, [sp, #0xBFC]
  00274	eb000000	 bl          __security_check_cookie

; 646  :         }
; 647  : 
; 648  :     return;
; 649  : }

  00278	e28ddb03	 add         sp, sp, #3, 22
  0027c	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00280	e12fff1e	 bx          lr
  00284		 |$LN57@DumpFlash|
  00284		 |$LN58@DumpFlash|
  00284	00000000	 DCD         |??_C@_1CG@KCBMIPD@?$AA?$AN?$AA?6?$AA?5?$AAS?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?3?$AA?5?$AA?$AA@|
  00288		 |$LN59@DumpFlash|
  00288	00000000	 DCD         |??_C@_15JNBOKNOG@?$AA?$AN?$AA?6?$AA?$AA@|
  0028c		 |$LN60@DumpFlash|
  0028c	00000000	 DCD         |??_C@_1M@FHJLFHFE@?$AA?5?$AA?$CF?$AA0?$AA2?$AAx?$AA?$AA@|
  00290		 |$LN61@DumpFlash|
  00290	00000000	 DCD         |??_C@_1M@CKIPGKFF@?$AA?$CF?$AA0?$AA4?$AAx?$AA?5?$AA?$AA@|
  00294		 |$LN62@DumpFlash|
  00294	00000000	 DCD         |??_C@_1DI@NODDJIFB@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAs?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00298		 |$LN63@DumpFlash|
  00298	00000000	 DCD         |??_C@_13JOFGPIOO@?$AA?4?$AA?$AA@|
  0029c		 |$LN64@DumpFlash|
  0029c	00000000	 DCD         |??_C@_15DAMPJCDE@?$AA?$CF?$AAc?$AA?$AA@|
  002a0		 |$LN65@DumpFlash|
  002a0	00000000	 DCD         |??_C@_15OJKDPEFE@?$AA?5?$AA?5?$AA?$AA@|
  002a4		 |$LN66@DumpFlash|
  002a4	00000000	 DCD         |??_C@_1HM@NEKLJOFD@?$AAR?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AAd?$AA1?$AA?3?$AA?5?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AAO?$AAE?$AAM?$AAR?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AAd?$AA?3?$AA?5?$AA?$CF?$AA0?$AA2@|
  002a8		 |$LN67@DumpFlash|
  002a8	00000000	 DCD         |??_C@_1EM@JNIBIIAB@?$AA?$AN?$AA?6?$AAS?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CI?$AAs?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AA?$CF?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5@|
  002ac		 |$LN68@DumpFlash|
  002ac	00000000	 DCD         |??_C@_1DO@OOAFHGFN@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAt?$AAo?$AAo?$AA?5?$AAb?$AAi?$AAg?$AA?5?$AAs?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  002b0		 |$LN69@DumpFlash|
  002b0	00000000	 DCD         |??_C@_1FG@IJKIFPEH@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAs?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?5?$AAl?$AAa?$AAr?$AAg?$AAe?$AAr?$AA?5?$AAt?$AAh?$AAa?$AAn?$AA?5?$AAm@|
  002b4		 |$LN70@DumpFlash|
  002b4	00000000	 DCD         |??_C@_1EO@FMHOCAJM@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAg?$AAe?$AAo?$AAm?$AAe?$AAt?$AAr?$AAy?$AA?5@|
  002b8		 |$LN71@DumpFlash|
  002b8	00000000	 DCD         |??_C@_1DO@ECBGAOKH@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAF?$AAM?$AAD?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  002bc		 |$LN72@DumpFlash|
  002bc	00000000	 DCD         |g_ulFlashBase|
  002c0		 |$LN73@DumpFlash|
  002c0	00000000	 DCD         |__security_cookie|
  002c4		 |$M47356|

			 ENDP  ; |DumpFlash|

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|??_C@_1BE@MFBEDOBI@?$AA?$AN?$AA?6?$AA?5?$AAD?$AAo?$AAn?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@EPPKNNOD@?$AA?$AN?$AA?6?$AA?5?$AAB?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?3?$AA?5?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T47388| DCD	|$LN11@SetBadBloc|
	DCD	0xc0003502

  00000			 AREA	 |.xdata|, DATA
|$T47384| DCD	0xfffffff4

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@MFBEDOBI@?$AA?$AN?$AA?6?$AA?5?$AAD?$AAo?$AAn?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB 0xd
	DCB	0x0, 0xa, 0x0, " ", 0x0, "D", 0x0, "o", 0x0, "n", 0x0, "e"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@EPPKNNOD@?$AA?$AN?$AA?6?$AA?5?$AAB?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?3?$AA?5?$AA?$AA@| DCB 0xd
	DCB	0x0, 0xa, 0x0, " ", 0x0, "B", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, "k", 0x0, " ", 0x0, "N", 0x0, "u", 0x0, "m", 0x0, "b"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T47384|

  00008		 |SetBadBlock| PROC

; 654  : {

  00008		 |$LN11@SetBadBloc|
  00008	e92d4010	 stmdb       sp!, {r4, lr}
  0000c	e24ddfed	 sub         sp, sp, #0xED, 30
  00010		 |$M47385|
  00010	e59f30c0	 ldr         r3, [pc, #0xC0]
  00014	e5933000	 ldr         r3, [r3]
  00018	e58d33b0	 str         r3, [sp, #0x3B0]

; 655  :     HANDLE hFMD = NULL;
; 656  :     PCI_REG_INFO regInfo;
; 657  :     FlashInfo flashInfo;
; 658  :     BLOCK_ID blockId;
; 659  :     WCHAR szInputLine[16];
; 660  : 
; 661  :     UNREFERENCED_PARAMETER(pMenu);
; 662  : 
; 663  :     // Open FMD
; 664  :     regInfo.MemBase.Reg[0] = g_ulFlashBase;

  0001c	e59f30b0	 ldr         r3, [pc, #0xB0]

; 665  :     hFMD = FMD_Init(NULL, &regInfo, NULL);

  00020	e3a02000	 mov         r2, #0
  00024	e28d1010	 add         r1, sp, #0x10
  00028	e5933000	 ldr         r3, [r3]
  0002c	e3a00000	 mov         r0, #0
  00030	e58d3320	 str         r3, [sp, #0x320]
  00034	eb000000	 bl          FMD_Init
  00038	e1b04000	 movs        r4, r0

; 666  :     if (hFMD == NULL) 

  0003c	1a000002	 bne         |$LN5@SetBadBloc|

; 667  :         {
; 668  :         OALLog(L" Oops, can't open FMD driver\r\n");

  00040	e59f0088	 ldr         r0, [pc, #0x88]
  00044	eb000000	 bl          NKDbgPrintfW

; 669  :         goto cleanUp;

  00048	ea000017	 b           |$LN1@SetBadBloc|
  0004c		 |$LN5@SetBadBloc|

; 670  :         }
; 671  : 
; 672  :     if (!FMD_GetInfo(&flashInfo)) 

  0004c	e28d0000	 add         r0, sp, #0
  00050	eb000000	 bl          FMD_GetInfo
  00054	e3500000	 cmp         r0, #0

; 673  :         {
; 674  :         OALLog(L" Oops, can't get flash geometry info\r\n");

  00058	059f006c	 ldreq       r0, [pc, #0x6C]
  0005c	0a00000f	 beq         |$LN8@SetBadBloc|

; 675  :         goto cleanUp;
; 676  :         }
; 677  : 
; 678  :     OALLog(L"\r\n Block Number: ");

  00060	e59f0060	 ldr         r0, [pc, #0x60]
  00064	eb000000	 bl          NKDbgPrintfW

; 679  : 
; 680  :     if (OALBLMenuReadLine(szInputLine, dimof(szInputLine)) == 0) 

  00068	e3a01010	 mov         r1, #0x10
  0006c	e28d0e39	 add         r0, sp, #0x39, 28
  00070	eb000000	 bl          OALBLMenuReadLine
  00074	e3500000	 cmp         r0, #0
  00078	0a000009	 beq         |$cleanUp$47023|

; 681  :         {
; 682  :         goto cleanUp;
; 683  :         }
; 684  : 
; 685  :     // Get sector number
; 686  :     blockId = OALStringToUINT32(szInputLine);

  0007c	e28d0e39	 add         r0, sp, #0x39, 28
  00080	eb000000	 bl          OALStringToUINT32

; 687  : 
; 688  :     // Check sector number
; 689  :     if (blockId >= flashInfo.dwNumBlocks) 

  00084	e59d3004	 ldr         r3, [sp, #4]
  00088	e1500003	 cmp         r0, r3

; 690  :         {
; 691  :         OALLog(L" Oops, too big block number\r\n");

  0008c	259f0030	 ldrcs       r0, [pc, #0x30]
  00090	2a000002	 bcs         |$LN8@SetBadBloc|

; 692  :         goto cleanUp;
; 693  :         }
; 694  : 
; 695  :     FMD_SetBlockStatus(blockId, BLOCK_STATUS_BAD);

  00094	e3a01002	 mov         r1, #2
  00098	eb000000	 bl          FMD_SetBlockStatus

; 696  : 
; 697  :     OALLog(L"\r\n Done\r\n");

  0009c	e59f001c	 ldr         r0, [pc, #0x1C]
  000a0		 |$LN8@SetBadBloc|
  000a0	eb000000	 bl          NKDbgPrintfW
  000a4		 |$cleanUp$47023|

; 698  : 
; 699  : cleanUp:
; 700  :     if (hFMD != NULL) 
; 701  :         {
; 702  :         FMD_Deinit(hFMD);

  000a4	e1a00004	 mov         r0, r4
  000a8	eb000000	 bl          FMD_Deinit
  000ac		 |$LN1@SetBadBloc|
  000ac	e59d03b0	 ldr         r0, [sp, #0x3B0]
  000b0	eb000000	 bl          __security_check_cookie

; 703  :         }
; 704  : 
; 705  :     return;
; 706  : }

  000b4	e28ddfed	 add         sp, sp, #0xED, 30
  000b8	e8bd4010	 ldmia       sp!, {r4, lr}
  000bc	e12fff1e	 bx          lr
  000c0		 |$LN12@SetBadBloc|
  000c0		 |$LN13@SetBadBloc|
  000c0	00000000	 DCD         |??_C@_1BE@MFBEDOBI@?$AA?$AN?$AA?6?$AA?5?$AAD?$AAo?$AAn?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  000c4		 |$LN14@SetBadBloc|
  000c4	00000000	 DCD         |??_C@_1DM@MPGKHCCK@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAt?$AAo?$AAo?$AA?5?$AAb?$AAi?$AAg?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAn?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  000c8		 |$LN15@SetBadBloc|
  000c8	00000000	 DCD         |??_C@_1CE@EPPKNNOD@?$AA?$AN?$AA?6?$AA?5?$AAB?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?3?$AA?5?$AA?$AA@|
  000cc		 |$LN16@SetBadBloc|
  000cc	00000000	 DCD         |??_C@_1EO@FMHOCAJM@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAg?$AAe?$AAo?$AAm?$AAe?$AAt?$AAr?$AAy?$AA?5@|
  000d0		 |$LN17@SetBadBloc|
  000d0	00000000	 DCD         |??_C@_1DO@ECBGAOKH@?$AA?5?$AAO?$AAo?$AAp?$AAs?$AA?0?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAF?$AAM?$AAD?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  000d4		 |$LN18@SetBadBloc|
  000d4	00000000	 DCD         |g_ulFlashBase|
  000d8		 |$LN19@SetBadBloc|
  000d8	00000000	 DCD         |__security_cookie|
  000dc		 |$M47386|

			 ENDP  ; |SetBadBlock|

	EXPORT	|??_C@_1GC@JKKDFPCG@?$AA?5?$AAD?$AAo?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAw?$AAa?$AAn?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AAf?$AAo?$AAr?$AAm?$AAa?$AAt?$AA?5?$AAu?$AAn?$AAr?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe@| [ DATA ] ; `string'
	IMPORT	|BLConfigureFlashPartitions|

  00000			 AREA	 |.pdata|, PDATA
|$T47405| DCD	|$LN6@FormatFlas|
	DCD	0x40001401

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@JKKDFPCG@?$AA?5?$AAD?$AAo?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAw?$AAa?$AAn?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AAf?$AAo?$AAr?$AAm?$AAa?$AAt?$AA?5?$AAu?$AAn?$AAr?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe@| DCB " "
	DCB	0x0, "D", 0x0, "o", 0x0, " ", 0x0, "y", 0x0, "o", 0x0, "u"
	DCB	0x0, " ", 0x0, "w", 0x0, "a", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, "m", 0x0, "a", 0x0, "t", 0x0, " ", 0x0, "u", 0x0, "n"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "e", 0x0, "r", 0x0, "v"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "b", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "k", 0x0, "s", 0x0, " ", 0x0, "[", 0x0, "-"
	DCB	0x0, "/", 0x0, "y", 0x0, "]", 0x0, "?", 0x0, " ", 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |FormatFlash| PROC

; 711  : {

  00000		 |$LN6@FormatFlas|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M47402|

; 712  :     WCHAR key;
; 713  :     
; 714  :     UNREFERENCED_PARAMETER(pMenu);
; 715  : 
; 716  :     OALLog(L" Do you want to format unreserved blocks [-/y]? ");

  00004	e59f0040	 ldr         r0, [pc, #0x40]
  00008	eb000000	 bl          NKDbgPrintfW

; 717  : 
; 718  :     // Get key
; 719  :     key = OALBLMenuReadKey(TRUE);

  0000c	e3a00001	 mov         r0, #1
  00010	eb000000	 bl          OALBLMenuReadKey
  00014	e1a04800	 mov         r4, r0, lsl #16

; 720  :     OALLog(L"%c\r\n", key);

  00018	e59f0028	 ldr         r0, [pc, #0x28]
  0001c	e1a04824	 mov         r4, r4, lsr #16
  00020	e1a01004	 mov         r1, r4
  00024	eb000000	 bl          NKDbgPrintfW

; 721  : 
; 722  :     // Depending on result
; 723  :     if (key != L'y' && key != L'Y') goto cleanUp;

  00028	e3540079	 cmp         r4, #0x79
  0002c	0a000001	 beq         |$LN1@FormatFlas|
  00030	e3540059	 cmp         r4, #0x59
  00034	1a000001	 bne         |$cleanUp$47037|
  00038		 |$LN1@FormatFlas|

; 724  : 
; 725  :     BLConfigureFlashPartitions(TRUE);

  00038	e3a00001	 mov         r0, #1
  0003c	eb000000	 bl          BLConfigureFlashPartitions
  00040		 |$cleanUp$47037|

; 726  :     
; 727  : cleanUp:    
; 728  :     
; 729  :     return;
; 730  : }

  00040	e8bd4010	 ldmia       sp!, {r4, lr}
  00044	e12fff1e	 bx          lr
  00048		 |$LN7@FormatFlas|
  00048		 |$LN8@FormatFlas|
  00048	00000000	 DCD         |??_C@_19DIEGALPP@?$AA?$CF?$AAc?$AA?$AN?$AA?6?$AA?$AA@|
  0004c		 |$LN9@FormatFlas|
  0004c	00000000	 DCD         |??_C@_1GC@JKKDFPCG@?$AA?5?$AAD?$AAo?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAw?$AAa?$AAn?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AAf?$AAo?$AAr?$AAm?$AAa?$AAt?$AA?5?$AAu?$AAn?$AAr?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe@|
  00050		 |$M47403|

			 ENDP  ; |FormatFlash|

	EXPORT	|??_C@_1DM@NJFEAFBO@?$AA?5?$AAF?$AAl?$AAa?$AAs?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAN?$AAK?$AA?4?$AAb?$AAi?$AAn?$AA?5?$AAi?$AAs?$AA?5?$AAe?$AAn?$AAa?$AAb?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@FEBEDMFN@?$AA?5?$AAF?$AAl?$AAa?$AAs?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAN?$AAK?$AA?4?$AAb?$AAi?$AAn?$AA?5?$AAi?$AAs?$AA?5?$AAd?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@POGPJPIN@?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAF?$AAl?$AAa?$AAs?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAN?$AAK?$AA?4?$AAb?$AAi?$AAn?$AA?5?$AA?$FL?$AAy?$AA?1?$AA?9?$AA?$FN?$AA?3?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@LIJCOJEF@?$AA?5?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAF?$AAl?$AAa?$AAs?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAN?$AAK?$AA?4?$AAb?$AAi?$AAn?$AA?5?$AA?$FL?$AAy?$AA?1?$AA?9?$AA?$FN?$AA?3?$AA?5@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T47418| DCD	|$LN13@EnableFlas|
	DCD	0x40002201

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@NJFEAFBO@?$AA?5?$AAF?$AAl?$AAa?$AAs?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAN?$AAK?$AA?4?$AAb?$AAi?$AAn?$AA?5?$AAi?$AAs?$AA?5?$AAe?$AAn?$AAa?$AAb?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "F", 0x0, "l", 0x0, "a", 0x0, "s", 0x0, "h", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "N", 0x0, "K", 0x0, "."
	DCB	0x0, "b", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "i", 0x0, "s"
	DCB	0x0, " ", 0x0, "e", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@FEBEDMFN@?$AA?5?$AAF?$AAl?$AAa?$AAs?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAN?$AAK?$AA?4?$AAb?$AAi?$AAn?$AA?5?$AAi?$AAs?$AA?5?$AAd?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "F", 0x0, "l", 0x0, "a", 0x0, "s", 0x0, "h", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "N", 0x0, "K", 0x0, "."
	DCB	0x0, "b", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "i", 0x0, "s"
	DCB	0x0, " ", 0x0, "d", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@POGPJPIN@?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAF?$AAl?$AAa?$AAs?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAN?$AAK?$AA?4?$AAb?$AAi?$AAn?$AA?5?$AA?$FL?$AAy?$AA?1?$AA?9?$AA?$FN?$AA?3?$AA?5?$AA?$AA@| DCB " "
	DCB	0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, " ", 0x0, "F", 0x0, "l", 0x0, "a", 0x0, "s", 0x0, "h"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "N", 0x0, "K"
	DCB	0x0, ".", 0x0, "b", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "["
	DCB	0x0, "y", 0x0, "/", 0x0, "-", 0x0, "]", 0x0, ":", 0x0, " "
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@LIJCOJEF@?$AA?5?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAF?$AAl?$AAa?$AAs?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAN?$AAK?$AA?4?$AAb?$AAi?$AAn?$AA?5?$AA?$FL?$AAy?$AA?1?$AA?9?$AA?$FN?$AA?3?$AA?5@| DCB " "
	DCB	0x0, "D", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, " ", 0x0, "F", 0x0, "l", 0x0, "a", 0x0, "s"
	DCB	0x0, "h", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "N"
	DCB	0x0, "K", 0x0, ".", 0x0, "b", 0x0, "i", 0x0, "n", 0x0, " "
	DCB	0x0, "[", 0x0, "y", 0x0, "/", 0x0, "-", 0x0, "]", 0x0, ":"
	DCB	0x0, " ", 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |EnableFlashNK| PROC

; 733  : {

  00000		 |$LN13@EnableFlas|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M47415|

; 734  :     WCHAR key;
; 735  : 
; 736  :     UNREFERENCED_PARAMETER(pMenu);
; 737  :     if (g_bootCfg.flashNKFlags & ENABLE_FLASH_NK) {

  00004	e59f4078	 ldr         r4, [pc, #0x78]
  00008	e5943074	 ldr         r3, [r4, #0x74]
  0000c	e3130001	 tst         r3, #1

; 738  :         OALLog(L" Disable Flashing NK.bin [y/-]: ");

  00010	159f0068	 ldrne       r0, [pc, #0x68]

; 739  :     } else {
; 740  :         OALLog(L" Enable Flashing NK.bin [y/-]: ");

  00014	059f0060	 ldreq       r0, [pc, #0x60]
  00018	eb000000	 bl          NKDbgPrintfW

; 741  :     }    
; 742  : 
; 743  :     // Get key
; 744  :     key = OALBLMenuReadKey(TRUE);

  0001c	e3a00001	 mov         r0, #1
  00020	eb000000	 bl          OALBLMenuReadKey
  00024	e1a05800	 mov         r5, r0, lsl #16

; 745  :     OALLog(L"%c\r\n", key);

  00028	e59f0048	 ldr         r0, [pc, #0x48]
  0002c	e1a05825	 mov         r5, r5, lsr #16
  00030	e1a01005	 mov         r1, r5
  00034	eb000000	 bl          NKDbgPrintfW

; 746  : 
; 747  :     if (key == L'y' || key == L'Y') {

  00038	e3550079	 cmp         r5, #0x79
  0003c	0a000001	 beq         |$LN3@EnableFlas|
  00040	e3550059	 cmp         r5, #0x59
  00044	1a000007	 bne         |$LN1@EnableFlas|
  00048		 |$LN3@EnableFlas|

; 748  :         if (g_bootCfg.flashNKFlags & ENABLE_FLASH_NK) 

  00048	e5943074	 ldr         r3, [r4, #0x74]
  0004c	e3130001	 tst         r3, #1

; 749  : 		{
; 750  :             g_bootCfg.flashNKFlags &= ~ENABLE_FLASH_NK;
; 751  :             OALLog(L" Flashing NK.bin is disabled\r\n");

  00050	159f001c	 ldrne       r0, [pc, #0x1C]

; 752  :         }
; 753  : 		else 
; 754  : 		{
; 755  :             g_bootCfg.flashNKFlags |= ENABLE_FLASH_NK;
; 756  :             OALLog(L" Flashing NK.bin is enabled\r\n");

  00054	059f0014	 ldreq       r0, [pc, #0x14]
  00058	13c33001	 bicne       r3, r3, #1
  0005c	03833001	 orreq       r3, r3, #1
  00060	e5843074	 str         r3, [r4, #0x74]
  00064	eb000000	 bl          NKDbgPrintfW
  00068		 |$LN1@EnableFlas|

; 757  :         }    
; 758  :     }
; 759  : 
; 760  : }

  00068	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0006c	e12fff1e	 bx          lr
  00070		 |$LN14@EnableFlas|
  00070		 |$LN15@EnableFlas|
  00070	00000000	 DCD         |??_C@_1DM@NJFEAFBO@?$AA?5?$AAF?$AAl?$AAa?$AAs?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAN?$AAK?$AA?4?$AAb?$AAi?$AAn?$AA?5?$AAi?$AAs?$AA?5?$AAe?$AAn?$AAa?$AAb?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00074		 |$LN16@EnableFlas|
  00074	00000000	 DCD         |??_C@_1DO@FEBEDMFN@?$AA?5?$AAF?$AAl?$AAa?$AAs?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAN?$AAK?$AA?4?$AAb?$AAi?$AAn?$AA?5?$AAi?$AAs?$AA?5?$AAd?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00078		 |$LN17@EnableFlas|
  00078	00000000	 DCD         |??_C@_19DIEGALPP@?$AA?$CF?$AAc?$AA?$AN?$AA?6?$AA?$AA@|
  0007c		 |$LN18@EnableFlas|
  0007c	00000000	 DCD         |??_C@_1EA@POGPJPIN@?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAF?$AAl?$AAa?$AAs?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAN?$AAK?$AA?4?$AAb?$AAi?$AAn?$AA?5?$AA?$FL?$AAy?$AA?1?$AA?9?$AA?$FN?$AA?3?$AA?5?$AA?$AA@|
  00080		 |$LN19@EnableFlas|
  00080	00000000	 DCD         |??_C@_1EC@LIJCOJEF@?$AA?5?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAF?$AAl?$AAa?$AAs?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAN?$AAK?$AA?4?$AAb?$AAi?$AAn?$AA?5?$AA?$FL?$AAy?$AA?1?$AA?9?$AA?$FN?$AA?3?$AA?5@|
  00084		 |$LN20@EnableFlas|
  00084	00000000	 DCD         |g_bootCfg|
  00088		 |$M47416|

			 ENDP  ; |EnableFlashNK|

	EXPORT	|??_C@_1GE@EJGAKBM@?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAE?$AAC?$AAC?$AA?5?$AAm?$AAo?$AAd?$AAe?$AA?0?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAE?$AAC?$AAC?$AA?5?$AAm?$AAo?$AAd?$AAe?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1ME@KHCPMAFG@?$AA?5?$AAT?$AAh?$AAi?$AAs?$AA?5?$AAc?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?5?$AAi?$AAs?$AA?5?$AAu?$AAs?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAt?$AAe?$AAm?$AAp?$AAo?$AAr?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HK@NLFNLNJI@?$AA?5?$AAS?$AAe?$AAl?$AAe?$AAc?$AAt?$AA?5?$AAE?$AAC?$AAC?$AA?5?$AAm?$AAo?$AAd?$AAe?$AA?5?$AA?$FL?$AA0?$AA?$CI?$AAH?$AAa?$AAm?$AAm?$AAi?$AAn?$AAg?$AA?5?$AA1?$AAb?$AAi?$AAt@| [ DATA ] ; `string'
	IMPORT	|g_ecctype|

  00000			 AREA	 |.pdata|, PDATA
|$T47433| DCD	|$LN8@SetECCType|
	DCD	0x40002701

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@EJGAKBM@?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAE?$AAC?$AAC?$AA?5?$AAm?$AAo?$AAd?$AAe?$AA?0?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAE?$AAC?$AAC?$AA?5?$AAm?$AAo?$AAd?$AAe?$AA?5@| DCB " "
	DCB	0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, " ", 0x0, "E", 0x0, "C", 0x0, "C", 0x0, " "
	DCB	0x0, "m", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, ",", 0x0, " "
	DCB	0x0, "s", 0x0, "e", 0x0, "t", 0x0, " ", 0x0, "E", 0x0, "C"
	DCB	0x0, "C", 0x0, " ", 0x0, "m", 0x0, "o", 0x0, "d", 0x0, "e"
	DCB	0x0, " ", 0x0, "a", 0x0, "s", 0x0, " ", 0x0, "H", 0x0, "a"
	DCB	0x0, "m", 0x0, "m", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "1", 0x0, "b", 0x0, "i", 0x0, "t", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1ME@KHCPMAFG@?$AA?5?$AAT?$AAh?$AAi?$AAs?$AA?5?$AAc?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?5?$AAi?$AAs?$AA?5?$AAu?$AAs?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAt?$AAe?$AAm?$AAp?$AAo?$AAr?$AAa@| DCB " "
	DCB	0x0, "T", 0x0, "h", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "c"
	DCB	0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "u", 0x0, "s"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "t", 0x0, "e", 0x0, "m", 0x0, "p", 0x0, "o", 0x0, "r"
	DCB	0x0, "a", 0x0, "r", 0x0, "i", 0x0, "l", 0x0, "y", 0x0, " "
	DCB	0x0, "c", 0x0, "h", 0x0, "a", 0x0, "n", 0x0, "g", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "E", 0x0, "C", 0x0, "C"
	DCB	0x0, " ", 0x0, "m", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, " ", 0x0, "N", 0x0, "K", 0x0, "."
	DCB	0x0, "b", 0x0, "i", 0x0, "n", 0x0, ",", 0x0, " ", 0x0, "i"
	DCB	0x0, "t", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "f"
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "t", 0x0, "e", 0x0, "s"
	DCB	0x0, "t", 0x0, " ", 0x0, "p", 0x0, "u", 0x0, "r", 0x0, "p"
	DCB	0x0, "o", 0x0, "s", 0x0, "e", 0x0, " ", 0x0, "o", 0x0, "n"
	DCB	0x0, "l", 0x0, "y", 0x0, "!", 0x0, " ", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@NLFNLNJI@?$AA?5?$AAS?$AAe?$AAl?$AAe?$AAc?$AAt?$AA?5?$AAE?$AAC?$AAC?$AA?5?$AAm?$AAo?$AAd?$AAe?$AA?5?$AA?$FL?$AA0?$AA?$CI?$AAH?$AAa?$AAm?$AAm?$AAi?$AAn?$AAg?$AA?5?$AA1?$AAb?$AAi?$AAt@| DCB " "
	DCB	0x0, "S", 0x0, "e", 0x0, "l", 0x0, "e", 0x0, "c", 0x0, "t"
	DCB	0x0, " ", 0x0, "E", 0x0, "C", 0x0, "C", 0x0, " ", 0x0, "m"
	DCB	0x0, "o", 0x0, "d", 0x0, "e", 0x0, " ", 0x0, "[", 0x0, "0"
	DCB	0x0, "(", 0x0, "H", 0x0, "a", 0x0, "m", 0x0, "m", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "1", 0x0, "b", 0x0, "i"
	DCB	0x0, "t", 0x0, ")", 0x0, "/", 0x0, "1", 0x0, "(", 0x0, "B"
	DCB	0x0, "C", 0x0, "H", 0x0, " ", 0x0, "4", 0x0, "b", 0x0, "i"
	DCB	0x0, "t", 0x0, ")", 0x0, "/", 0x0, "2", 0x0, "(", 0x0, "B"
	DCB	0x0, "C", 0x0, "H", 0x0, " ", 0x0, "8", 0x0, "b", 0x0, "i"
	DCB	0x0, "t", 0x0, ")", 0x0, "]", 0x0, ":", 0x0, " ", 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetECCType| PROC

; 763  : {

  00000		 |$LN8@SetECCType|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M47430|

; 764  :     WCHAR key;
; 765  :     UNREFERENCED_PARAMETER(pMenu);
; 766  :     OALLog(L" This command is used to temporarily changing ECC mode in NK.bin, it is for test purpose only! \r\n");

  00004	e59f008c	 ldr         r0, [pc, #0x8C]
  00008	eb000000	 bl          NKDbgPrintfW

; 767  :     OALLog(L" Select ECC mode [0(Hamming 1bit)/1(BCH 4bit)/2(BCH 8bit)]: ");

  0000c	e59f0080	 ldr         r0, [pc, #0x80]
  00010	eb000000	 bl          NKDbgPrintfW

; 768  : 
; 769  :     // Get key
; 770  :     key = OALBLMenuReadKey(TRUE);

  00014	e3a00001	 mov         r0, #1
  00018	eb000000	 bl          OALBLMenuReadKey
  0001c	e1a05800	 mov         r5, r0, lsl #16

; 771  :     OALLog(L"%c\r\n", key);

  00020	e59f0068	 ldr         r0, [pc, #0x68]
  00024	e1a05825	 mov         r5, r5, lsr #16
  00028	e1a01005	 mov         r1, r5
  0002c	eb000000	 bl          NKDbgPrintfW

; 772  : 
; 773  :     if (key == L'0' || key == L'1' || key == L'2')

  00030	e3550030	 cmp         r5, #0x30
  00034	0a00000a	 beq         |$LN2@SetECCType|
  00038	e3550031	 cmp         r5, #0x31
  0003c	0a000008	 beq         |$LN2@SetECCType|
  00040	e3550032	 cmp         r5, #0x32
  00044	0a000006	 beq         |$LN2@SetECCType|

; 776  :     }
; 777  :     else 
; 778  :     {
; 779  :         g_bootCfg.ECCtype = 0;

  00048	e59f4038	 ldr         r4, [pc, #0x38]

; 780  :         OALLog(L" Invalid ECC mode, set ECC mode as Hamming 1bit\r\n");

  0004c	e59f0038	 ldr         r0, [pc, #0x38]
  00050	e3a03000	 mov         r3, #0
  00054	e5c43078	 strb        r3, [r4, #0x78]
  00058	eb000000	 bl          NKDbgPrintfW
  0005c	e5d42078	 ldrb        r2, [r4, #0x78]
  00060	ea000003	 b           |$LN1@SetECCType|
  00064		 |$LN2@SetECCType|

; 774  :     {
; 775  :         g_bootCfg.ECCtype = (UCHAR)(key - '0');

  00064	e59f401c	 ldr         r4, [pc, #0x1C]
  00068	e28530d0	 add         r3, r5, #0xD0
  0006c	e20320ff	 and         r2, r3, #0xFF
  00070	e5c42078	 strb        r2, [r4, #0x78]
  00074		 |$LN1@SetECCType|

; 781  :     }    
; 782  :     g_ecctype = g_bootCfg.ECCtype;

  00074	e59f3008	 ldr         r3, [pc, #8]
  00078	e5c32000	 strb        r2, [r3]

; 783  : 	
; 784  : }

  0007c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00080	e12fff1e	 bx          lr
  00084		 |$LN9@SetECCType|
  00084		 |$LN10@SetECCType|
  00084	00000000	 DCD         |g_ecctype|
  00088		 |$LN11@SetECCType|
  00088	00000000	 DCD         |g_bootCfg|
  0008c		 |$LN12@SetECCType|
  0008c	00000000	 DCD         |??_C@_1GE@EJGAKBM@?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAE?$AAC?$AAC?$AA?5?$AAm?$AAo?$AAd?$AAe?$AA?0?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAE?$AAC?$AAC?$AA?5?$AAm?$AAo?$AAd?$AAe?$AA?5@|
  00090		 |$LN13@SetECCType|
  00090	00000000	 DCD         |??_C@_19DIEGALPP@?$AA?$CF?$AAc?$AA?$AN?$AA?6?$AA?$AA@|
  00094		 |$LN14@SetECCType|
  00094	00000000	 DCD         |??_C@_1HK@NLFNLNJI@?$AA?5?$AAS?$AAe?$AAl?$AAe?$AAc?$AAt?$AA?5?$AAE?$AAC?$AAC?$AA?5?$AAm?$AAo?$AAd?$AAe?$AA?5?$AA?$FL?$AA0?$AA?$CI?$AAH?$AAa?$AAm?$AAm?$AAi?$AAn?$AAg?$AA?5?$AA1?$AAb?$AAi?$AAt@|
  00098		 |$LN15@SetECCType|
  00098	00000000	 DCD         |??_C@_1ME@KHCPMAFG@?$AA?5?$AAT?$AAh?$AAi?$AAs?$AA?5?$AAc?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?5?$AAi?$AAs?$AA?5?$AAu?$AAs?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAt?$AAe?$AAm?$AAp?$AAo?$AAr?$AAa@|
  0009c		 |$M47431|

			 ENDP  ; |SetECCType|

	END
