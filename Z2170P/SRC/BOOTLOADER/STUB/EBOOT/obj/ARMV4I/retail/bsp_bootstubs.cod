; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\Z2170P\SRC\BOOTLOADER\STUB\bsp_bootstubs.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|INTERRUPTS_STATUS|
; File c:\wince600\platform\z2170p\src\bootloader\stub\bsp_bootstubs.c

  00000			 AREA	 |.pdata|, PDATA
|$T46598| DCD	|$LN5@INTERRUPTS|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |INTERRUPTS_STATUS| PROC

; 26   : {

  00000		 |$LN5@INTERRUPTS|
  00000		 |$M46595|

; 27   :     return FALSE;

  00000	e3a00000	 mov         r0, #0

; 28   : }

  00004	e12fff1e	 bx          lr
  00008		 |$M46596|

			 ENDP  ; |INTERRUPTS_STATUS|

	EXPORT	|CloseHandle|

  00000			 AREA	 |.pdata|, PDATA
|$T46607| DCD	|$LN5@CloseHandl|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |CloseHandle| PROC

; 71   : {

  00000		 |$LN5@CloseHandl|
  00000		 |$M46604|

; 72   :     UNREFERENCED_PARAMETER(hObject);
; 73   :     return TRUE;

  00000	e3a00001	 mov         r0, #1

; 74   : }

  00004	e12fff1e	 bx          lr
  00008		 |$M46605|

			 ENDP  ; |CloseHandle|

	EXPORT	|EnterCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T46614| DCD	|$LN5@EnterCriti|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |EnterCriticalSection| PROC

; 82   : {

  00000		 |$LN5@EnterCriti|
  00000		 |$M46611|

; 83   :     UNREFERENCED_PARAMETER(lpcs);
; 84   : }

  00000	e12fff1e	 bx          lr
  00004		 |$M46612|

			 ENDP  ; |EnterCriticalSection|

	EXPORT	|LeaveCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T46621| DCD	|$LN5@LeaveCriti|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |LeaveCriticalSection| PROC

; 92   : {

  00000		 |$LN5@LeaveCriti|
  00000		 |$M46618|

; 93   :     UNREFERENCED_PARAMETER(lpcs);
; 94   : }

  00000	e12fff1e	 bx          lr
  00004		 |$M46619|

			 ENDP  ; |LeaveCriticalSection|

	EXPORT	|InitializeCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T46628| DCD	|$LN5@Initialize|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |InitializeCriticalSection| PROC

; 103  : {

  00000		 |$LN5@Initialize|
  00000		 |$M46625|

; 104  :     UNREFERENCED_PARAMETER(lpcs);
; 105  : }

  00000	e12fff1e	 bx          lr
  00004		 |$M46626|

			 ENDP  ; |InitializeCriticalSection|

	EXPORT	|DeleteCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T46635| DCD	|$LN5@DeleteCrit|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DeleteCriticalSection| PROC

; 111  : {

  00000		 |$LN5@DeleteCrit|
  00000		 |$M46632|

; 112  :     UNREFERENCED_PARAMETER(lpCriticalSection);
; 113  : }

  00000	e12fff1e	 bx          lr
  00004		 |$M46633|

			 ENDP  ; |DeleteCriticalSection|

	EXPORT	|SC_CreateMutex|

  00000			 AREA	 |.pdata|, PDATA
|$T46644| DCD	|$LN5@SC_CreateM|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SC_CreateMutex| PROC

; 123  : {

  00000		 |$LN5@SC_CreateM|
  00000		 |$M46641|

; 124  :     UNREFERENCED_PARAMETER(lpsa);
; 125  :     UNREFERENCED_PARAMETER(bInitialOwner);
; 126  :     UNREFERENCED_PARAMETER(lpName);
; 127  :     return NULL;

  00000	e3a00000	 mov         r0, #0

; 128  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M46642|

			 ENDP  ; |SC_CreateMutex|

	EXPORT	|SC_WaitForMultiple|

  00000			 AREA	 |.pdata|, PDATA
|$T46653| DCD	|$LN5@SC_WaitFor|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SC_WaitForMultiple| PROC

; 139  : {

  00000		 |$LN5@SC_WaitFor|
  00000		 |$M46650|

; 140  :     UNREFERENCED_PARAMETER(cObjects);
; 141  :     UNREFERENCED_PARAMETER(lphObjects);
; 142  :     UNREFERENCED_PARAMETER(fWaitAll);
; 143  :     UNREFERENCED_PARAMETER(dwTimeout);
; 144  :     return 0;

  00000	e3a00000	 mov         r0, #0

; 145  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M46651|

			 ENDP  ; |SC_WaitForMultiple|

	EXPORT	|SC_ReleaseMutex|

  00000			 AREA	 |.pdata|, PDATA
|$T46662| DCD	|$LN5@SC_Release|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SC_ReleaseMutex| PROC

; 152  : {

  00000		 |$LN5@SC_Release|
  00000		 |$M46659|

; 153  :     UNREFERENCED_PARAMETER(hMutex);
; 154  :     return TRUE;

  00000	e3a00001	 mov         r0, #1

; 155  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M46660|

			 ENDP  ; |SC_ReleaseMutex|

	EXPORT	|EnableDeviceClocks|
	IMPORT	|OALPAtoVA|

  00000			 AREA	 |.pdata|, PDATA
|$T46713| DCD	|$LN119@EnableDevi|
	DCD	0x40019401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |EnableDeviceClocks| PROC

; 228  : {

  00000		 |$LN119@EnableDevi|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M46710|
  00004	e1a04001	 mov         r4, r1

; 229  :     OMAP_CM_REGS* pCmRegs;
; 230  : 
; 231  :     switch (devId)

  00008	e3500029	 cmp         r0, #0x29
  0000c	8a0000e4	 bhi         |$LN95@EnableDevi|
  00010	0a0000d2	 beq         |$LN40@EnableDevi|
  00014	e350000c	 cmp         r0, #0xC
  00018	8a000070	 bhi         |$LN96@EnableDevi|
  0001c	0a000059	 beq         |$LN75@EnableDevi|
  00020	e3500003	 cmp         r0, #3
  00024	0a000047	 beq         |$LN5@EnableDevi|
  00028	e3500006	 cmp         r0, #6
  0002c	0a00002f	 beq         |$LN10@EnableDevi|
  00030	e350000a	 cmp         r0, #0xA
  00034	0a000017	 beq         |$LN60@EnableDevi|
  00038	e350000b	 cmp         r0, #0xB
  0003c	1a000180	 bne         |$LN86@EnableDevi|
  00040	e3a03312	 mov         r3, #0x12, 6

; 370  : 
; 371  :         case OMAP_DEVICE_UART2:
; 372  :             pCmRegs = OALPAtoUA(OMAP_PRCM_CORE_CM_REGS_PA);

  00044	e3830c4a	 orr         r0, r3, #0x4A, 24
  00048	e3a01000	 mov         r1, #0
  0004c	eb000000	 bl          OALPAtoVA

; 373  :             if (bEnable)
; 374  :                 {                
; 375  :                 SETREG32(&pCmRegs->CM_FCLKEN1_xxx, CM_CLKEN_UART2);

  00050	e5903000	 ldr         r3, [r0]
  00054	e3540000	 cmp         r4, #0
  00058	0a000009	 beq         |$LN54@EnableDevi|

; 376  :                 SETREG32(&pCmRegs->CM_ICLKEN1_xxx, CM_CLKEN_UART2);

  0005c	e3833901	 orr         r3, r3, #1, 18
  00060	e5803000	 str         r3, [r0]
  00064	e2802020	 add         r2, r0, #0x20
  00068	e5b03010	 ldr         r3, [r0, #0x10]!
  0006c	e3833901	 orr         r3, r3, #1, 18
  00070	e5803000	 str         r3, [r0]
  00074		 |$LL53@EnableDevi|

; 377  :                 while (INREG32(&pCmRegs->CM_IDLEST1_xxx) & CM_IDLEST_ST_UART2);

  00074	e5923000	 ldr         r3, [r2]
  00078	e3130901	 tst         r3, #1, 18
  0007c	1afffffc	 bne         |$LL53@EnableDevi|

; 378  :                 }
; 379  :             else

  00080	ea00016f	 b           |$LN86@EnableDevi|
  00084		 |$LN54@EnableDevi|

; 380  :                 {
; 381  :                 CLRREG32(&pCmRegs->CM_FCLKEN1_xxx, CM_CLKEN_UART2);
; 382  :                 CLRREG32(&pCmRegs->CM_ICLKEN1_xxx, CM_CLKEN_UART2);

  00084	e3c33901	 bic         r3, r3, #1, 18
  00088	e5803000	 str         r3, [r0]
  0008c	e5b03010	 ldr         r3, [r0, #0x10]!
  00090	e3c33901	 bic         r3, r3, #1, 18

; 383  :                 }
; 384  :             break;

  00094	ea000169	 b           |$LN116@EnableDevi|
  00098		 |$LN60@EnableDevi|
  00098	e3a03312	 mov         r3, #0x12, 6
  0009c	e3830c4a	 orr         r0, r3, #0x4A, 24
  000a0	e3a01000	 mov         r1, #0
  000a4	eb000000	 bl          OALPAtoVA
  000a8	e5903000	 ldr         r3, [r0]
  000ac	e3540000	 cmp         r4, #0
  000b0	0a000009	 beq         |$LN59@EnableDevi|
  000b4	e3833a02	 orr         r3, r3, #2, 20
  000b8	e5803000	 str         r3, [r0]
  000bc	e2802020	 add         r2, r0, #0x20
  000c0	e5b03010	 ldr         r3, [r0, #0x10]!
  000c4	e3833a02	 orr         r3, r3, #2, 20
  000c8	e5803000	 str         r3, [r0]
  000cc		 |$LL58@EnableDevi|
  000cc	e5923000	 ldr         r3, [r2]
  000d0	e3130a02	 tst         r3, #2, 20
  000d4	1afffffc	 bne         |$LL58@EnableDevi|

; 340  : /*
; 341  :         case OMAP_DEVICE_MCSPI1:
; 342  :             pCmRegs = OALPAtoUA(OMAP_PRCM_CORE_CM_REGS_PA);
; 343  :             if (bEnable)
; 344  :                 {                
; 345  :                 SETREG32(&pCmRegs->CM_FCLKEN1_xxx, CM_CLKEN_MCSPI1);
; 346  :                 SETREG32(&pCmRegs->CM_ICLKEN1_xxx, CM_CLKEN_MCSPI1);
; 347  :                 while (INREG32(&pCmRegs->CM_IDLEST1_xxx) & CM_IDLEST_ST_MCSPI1);
; 348  :                 }
; 349  :             else
; 350  :                 {
; 351  :                 CLRREG32(&pCmRegs->CM_FCLKEN1_xxx, CM_CLKEN_MCSPI1);
; 352  :                 CLRREG32(&pCmRegs->CM_ICLKEN1_xxx, CM_CLKEN_MCSPI1);
; 353  :                 }
; 354  :             break;
; 355  : */
; 356  :         case OMAP_DEVICE_UART1:
; 357  :             pCmRegs = OALPAtoUA(OMAP_PRCM_CORE_CM_REGS_PA);
; 358  :             if (bEnable)
; 359  :                 {                
; 360  :                 SETREG32(&pCmRegs->CM_FCLKEN1_xxx, CM_CLKEN_UART1);
; 361  :                 SETREG32(&pCmRegs->CM_ICLKEN1_xxx, CM_CLKEN_UART1);
; 362  :                 while (INREG32(&pCmRegs->CM_IDLEST1_xxx) & CM_IDLEST_ST_UART1);
; 363  :                 }
; 364  :             else

  000d8	ea000159	 b           |$LN86@EnableDevi|
  000dc		 |$LN59@EnableDevi|

; 365  :                 {
; 366  :                 CLRREG32(&pCmRegs->CM_FCLKEN1_xxx, CM_CLKEN_UART1);
; 367  :                 CLRREG32(&pCmRegs->CM_ICLKEN1_xxx, CM_CLKEN_UART1);

  000dc	e3c33a02	 bic         r3, r3, #2, 20
  000e0	e5803000	 str         r3, [r0]
  000e4	e5b03010	 ldr         r3, [r0, #0x10]!
  000e8	e3c33a02	 bic         r3, r3, #2, 20

; 368  :                 }
; 369  :             break;

  000ec	ea000153	 b           |$LN116@EnableDevi|
  000f0		 |$LN10@EnableDevi|
  000f0	e3a03312	 mov         r3, #0x12, 6

; 500  :                 {
; 501  :                 CLRREG32(&pCmRegs->CM_FCLKEN_xxx, CM_CLKEN_GPIO6);
; 502  :                 CLRREG32(&pCmRegs->CM_ICLKEN_xxx, CM_CLKEN_GPIO6);
; 503  :                 }
; 504  :             break;
; 505  : 
; 506  : 		case OMAP_DEVICE_MCBSP1:
; 507  :             pCmRegs = OALPAtoUA(OMAP_PRCM_CORE_CM_REGS_PA);

  000f4	e3830c4a	 orr         r0, r3, #0x4A, 24
  000f8	e3a01000	 mov         r1, #0
  000fc	eb000000	 bl          OALPAtoVA

; 508  :             if (bEnable)
; 509  :                 {                
; 510  :                 SETREG32(&pCmRegs->CM_FCLKEN_xxx, CM_CLKEN_MCBSP1);

  00100	e5903000	 ldr         r3, [r0]
  00104	e3540000	 cmp         r4, #0
  00108	0a000009	 beq         |$LN9@EnableDevi|

; 511  :                 SETREG32(&pCmRegs->CM_ICLKEN_xxx, CM_CLKEN_MCBSP1);

  0010c	e3833c02	 orr         r3, r3, #2, 24
  00110	e5803000	 str         r3, [r0]
  00114	e2802020	 add         r2, r0, #0x20
  00118	e5b03010	 ldr         r3, [r0, #0x10]!
  0011c	e3833c02	 orr         r3, r3, #2, 24
  00120	e5803000	 str         r3, [r0]
  00124		 |$LL8@EnableDevi|

; 512  :                 while (INREG32(&pCmRegs->CM_IDLEST1_xxx) & CM_IDLEST_ST_MCBSP1);

  00124	e5923000	 ldr         r3, [r2]
  00128	e3130c02	 tst         r3, #2, 24
  0012c	1afffffc	 bne         |$LL8@EnableDevi|

; 513  :                 }
; 514  :             else

  00130	ea000143	 b           |$LN86@EnableDevi|
  00134		 |$LN9@EnableDevi|

; 515  :                 {
; 516  :                 CLRREG32(&pCmRegs->CM_FCLKEN_xxx, CM_CLKEN_MCBSP1);
; 517  :                 CLRREG32(&pCmRegs->CM_ICLKEN_xxx, CM_CLKEN_MCBSP1);

  00134	e3c33c02	 bic         r3, r3, #2, 24
  00138	e5803000	 str         r3, [r0]
  0013c	e5b03010	 ldr         r3, [r0, #0x10]!
  00140	e3c33c02	 bic         r3, r3, #2, 24

; 518  :                 }
; 519  :             break;

  00144	ea00013d	 b           |$LN116@EnableDevi|
  00148		 |$LN5@EnableDevi|
  00148	e3a03312	 mov         r3, #0x12, 6

; 520  : /*
; 521  :         case OMAP_DEVICE_DSS:
; 522  :             pCmRegs = OALPAtoUA(OMAP_PRCM_DSS_CM_REGS_PA);
; 523  :             if (bEnable)
; 524  :                 {                
; 525  :                 SETREG32(&pCmRegs->CM_FCLKEN_xxx, CM_CLKEN_DSS1 | CM_CLKEN_DSS2 | CM_CLKEN_TV);
; 526  :                 SETREG32(&pCmRegs->CM_ICLKEN_xxx, CM_CLKEN_DSS);
; 527  :                 }
; 528  :             else
; 529  :                 {
; 530  :                 CLRREG32(&pCmRegs->CM_FCLKEN_xxx, CM_CLKEN_DSS1 | CM_CLKEN_DSS2);
; 531  :                 CLRREG32(&pCmRegs->CM_ICLKEN_xxx, CM_CLKEN_DSS);
; 532  :                 }
; 533  :             break;
; 534  : */
; 535  :         case OMAP_DEVICE_HSOTGUSB:
; 536  :             pCmRegs = OALPAtoUA(OMAP_PRCM_CORE_CM_REGS_PA);

  0014c	e3830c4a	 orr         r0, r3, #0x4A, 24
  00150	e3a01000	 mov         r1, #0
  00154	eb000000	 bl          OALPAtoVA

; 537  :             if (bEnable)
; 538  :                 {
; 539  :                 SETREG32(&pCmRegs->CM_ICLKEN1_xxx, CM_CLKEN_HSOTGUSB);

  00158	e5903010	 ldr         r3, [r0, #0x10]
  0015c	e3540000	 cmp         r4, #0
  00160	0a000005	 beq         |$LN4@EnableDevi|
  00164	e3833010	 orr         r3, r3, #0x10
  00168	e5803010	 str         r3, [r0, #0x10]
  0016c		 |$LL3@EnableDevi|

; 540  :                 while (INREG32(&pCmRegs->CM_IDLEST1_xxx) & CM_IDLEST_ST_HSOTGUSB_IDLE);

  0016c	e5903020	 ldr         r3, [r0, #0x20]
  00170	e3130020	 tst         r3, #0x20
  00174	1afffffc	 bne         |$LL3@EnableDevi|

; 541  :                 }
; 542  :             else

  00178	ea000131	 b           |$LN86@EnableDevi|
  0017c		 |$LN4@EnableDevi|

; 543  :                 {
; 544  :                 CLRREG32(&pCmRegs->CM_ICLKEN1_xxx, CM_CLKEN_HSOTGUSB);

  0017c	e3c33010	 bic         r3, r3, #0x10
  00180	e5803010	 str         r3, [r0, #0x10]

; 545  :                 }
; 546  :             break;

  00184	ea00012e	 b           |$LN86@EnableDevi|
  00188		 |$LN75@EnableDevi|
  00188	e3a03312	 mov         r3, #0x12, 6
  0018c	e3830c4a	 orr         r0, r3, #0x4A, 24
  00190	e3a01000	 mov         r1, #0
  00194	eb000000	 bl          OALPAtoVA
  00198	e5903000	 ldr         r3, [r0]
  0019c	e3540000	 cmp         r4, #0
  001a0	0a000009	 beq         |$LN74@EnableDevi|
  001a4	e3833902	 orr         r3, r3, #2, 18
  001a8	e5803000	 str         r3, [r0]
  001ac	e2802020	 add         r2, r0, #0x20
  001b0	e5b03010	 ldr         r3, [r0, #0x10]!
  001b4	e3833902	 orr         r3, r3, #2, 18
  001b8	e5803000	 str         r3, [r0]
  001bc		 |$LL73@EnableDevi|
  001bc	e5923000	 ldr         r3, [r2]
  001c0	e3130902	 tst         r3, #2, 18
  001c4	1afffffc	 bne         |$LL73@EnableDevi|

; 294  : 
; 295  :         case OMAP_DEVICE_I2C1:
; 296  :             pCmRegs = OALPAtoUA(OMAP_PRCM_CORE_CM_REGS_PA);
; 297  :             if (bEnable)
; 298  :                 {
; 299  :                 SETREG32(&pCmRegs->CM_FCLKEN1_xxx, CM_CLKEN_I2C1);
; 300  :                 SETREG32(&pCmRegs->CM_ICLKEN1_xxx, CM_CLKEN_I2C1);
; 301  :                 while (INREG32(&pCmRegs->CM_IDLEST1_xxx) & CM_IDLEST_ST_I2C1);
; 302  :                 }
; 303  :             else

  001c8	ea00011d	 b           |$LN86@EnableDevi|
  001cc		 |$LN74@EnableDevi|

; 304  :                 {
; 305  :                 CLRREG32(&pCmRegs->CM_FCLKEN1_xxx, CM_CLKEN_I2C1);
; 306  :                 CLRREG32(&pCmRegs->CM_ICLKEN1_xxx, CM_CLKEN_I2C1);

  001cc	e3c33902	 bic         r3, r3, #2, 18
  001d0	e5803000	 str         r3, [r0]
  001d4	e5b03010	 ldr         r3, [r0, #0x10]!
  001d8	e3c33902	 bic         r3, r3, #2, 18

; 307  :                 }
; 308  :                 
; 309  :             break;

  001dc	ea000117	 b           |$LN116@EnableDevi|
  001e0		 |$LN96@EnableDevi|

; 229  :     OMAP_CM_REGS* pCmRegs;
; 230  : 
; 231  :     switch (devId)

  001e0	e350000d	 cmp         r0, #0xD
  001e4	0a000047	 beq         |$LN70@EnableDevi|
  001e8	e350000e	 cmp         r0, #0xE
  001ec	0a00002f	 beq         |$LN65@EnableDevi|
  001f0	e3500015	 cmp         r0, #0x15
  001f4	0a000017	 beq         |$LN85@EnableDevi|
  001f8	e3500016	 cmp         r0, #0x16
  001fc	1a000110	 bne         |$LN86@EnableDevi|
  00200	e3a03312	 mov         r3, #0x12, 6

; 279  : 
; 280  :         case OMAP_DEVICE_MMC2:
; 281  :             pCmRegs = OALPAtoUA(OMAP_PRCM_CORE_CM_REGS_PA);

  00204	e3830c4a	 orr         r0, r3, #0x4A, 24
  00208	e3a01000	 mov         r1, #0
  0020c	eb000000	 bl          OALPAtoVA

; 282  :             if (bEnable)
; 283  :                 {                
; 284  :                 SETREG32(&pCmRegs->CM_FCLKEN1_xxx, CM_CLKEN_MMC2);

  00210	e5903000	 ldr         r3, [r0]
  00214	e3540000	 cmp         r4, #0
  00218	0a000009	 beq         |$LN79@EnableDevi|

; 285  :                 SETREG32(&pCmRegs->CM_ICLKEN1_xxx, CM_CLKEN_MMC2);

  0021c	e3833402	 orr         r3, r3, #2, 8
  00220	e5803000	 str         r3, [r0]
  00224	e2802020	 add         r2, r0, #0x20
  00228	e5b03010	 ldr         r3, [r0, #0x10]!
  0022c	e3833402	 orr         r3, r3, #2, 8
  00230	e5803000	 str         r3, [r0]
  00234		 |$LL78@EnableDevi|

; 286  :                 while (INREG32(&pCmRegs->CM_IDLEST1_xxx) & CM_IDLEST_ST_MMC2);

  00234	e5923000	 ldr         r3, [r2]
  00238	e3130402	 tst         r3, #2, 8
  0023c	1afffffc	 bne         |$LL78@EnableDevi|

; 287  :                 }
; 288  :             else

  00240	ea0000ff	 b           |$LN86@EnableDevi|
  00244		 |$LN79@EnableDevi|

; 289  :                 {
; 290  :                 CLRREG32(&pCmRegs->CM_FCLKEN1_xxx, CM_CLKEN_MMC2);
; 291  :                 CLRREG32(&pCmRegs->CM_ICLKEN1_xxx, CM_CLKEN_MMC2);

  00244	e3c33402	 bic         r3, r3, #2, 8
  00248	e5803000	 str         r3, [r0]
  0024c	e5b03010	 ldr         r3, [r0, #0x10]!
  00250	e3c33402	 bic         r3, r3, #2, 8

; 292  :                 }
; 293  :             break;

  00254	ea0000f9	 b           |$LN116@EnableDevi|
  00258		 |$LN85@EnableDevi|
  00258	e3a03312	 mov         r3, #0x12, 6
  0025c	e3830c4a	 orr         r0, r3, #0x4A, 24
  00260	e3a01000	 mov         r1, #0
  00264	eb000000	 bl          OALPAtoVA
  00268	e5903000	 ldr         r3, [r0]
  0026c	e3540000	 cmp         r4, #0
  00270	0a000009	 beq         |$LN84@EnableDevi|
  00274	e3833401	 orr         r3, r3, #1, 8
  00278	e5803000	 str         r3, [r0]
  0027c	e2802020	 add         r2, r0, #0x20
  00280	e5b03010	 ldr         r3, [r0, #0x10]!
  00284	e3833401	 orr         r3, r3, #1, 8
  00288	e5803000	 str         r3, [r0]
  0028c		 |$LL83@EnableDevi|
  0028c	e5923000	 ldr         r3, [r2]
  00290	e3130401	 tst         r3, #1, 8
  00294	1afffffc	 bne         |$LL83@EnableDevi|

; 262  :                 }
; 263  :             break;
; 264  : 
; 265  :         case OMAP_DEVICE_MMC1:
; 266  :             pCmRegs = OALPAtoUA(OMAP_PRCM_CORE_CM_REGS_PA);
; 267  :             if (bEnable)
; 268  :                 {                
; 269  :                 SETREG32(&pCmRegs->CM_FCLKEN1_xxx, CM_CLKEN_MMC1);
; 270  :                 SETREG32(&pCmRegs->CM_ICLKEN1_xxx, CM_CLKEN_MMC1);
; 271  :                 while (INREG32(&pCmRegs->CM_IDLEST1_xxx) & CM_IDLEST_ST_MMC1);
; 272  :                 }
; 273  :             else

  00298	ea0000e9	 b           |$LN86@EnableDevi|
  0029c		 |$LN84@EnableDevi|

; 274  :                 {
; 275  :                 CLRREG32(&pCmRegs->CM_FCLKEN1_xxx, CM_CLKEN_MMC1);
; 276  :                 CLRREG32(&pCmRegs->CM_ICLKEN1_xxx, CM_CLKEN_MMC1);

  0029c	e3c33401	 bic         r3, r3, #1, 8
  002a0	e5803000	 str         r3, [r0]
  002a4	e5b03010	 ldr         r3, [r0, #0x10]!
  002a8	e3c33401	 bic         r3, r3, #1, 8

; 277  :                 }
; 278  :             break;

  002ac	ea0000e3	 b           |$LN116@EnableDevi|
  002b0		 |$LN65@EnableDevi|
  002b0	e3a03312	 mov         r3, #0x12, 6

; 325  : 
; 326  :         case OMAP_DEVICE_I2C3:
; 327  :             pCmRegs = OALPAtoUA(OMAP_PRCM_CORE_CM_REGS_PA);

  002b4	e3830c4a	 orr         r0, r3, #0x4A, 24
  002b8	e3a01000	 mov         r1, #0
  002bc	eb000000	 bl          OALPAtoVA

; 328  :             if (bEnable)
; 329  :                 {                
; 330  :                 SETREG32(&pCmRegs->CM_FCLKEN1_xxx, CM_CLKEN_I2C3);

  002c0	e5903000	 ldr         r3, [r0]
  002c4	e3540000	 cmp         r4, #0
  002c8	0a000009	 beq         |$LN64@EnableDevi|

; 331  :                 SETREG32(&pCmRegs->CM_ICLKEN1_xxx, CM_CLKEN_I2C3);

  002cc	e3833802	 orr         r3, r3, #2, 16
  002d0	e5803000	 str         r3, [r0]
  002d4	e2802020	 add         r2, r0, #0x20
  002d8	e5b03010	 ldr         r3, [r0, #0x10]!
  002dc	e3833802	 orr         r3, r3, #2, 16
  002e0	e5803000	 str         r3, [r0]
  002e4		 |$LL63@EnableDevi|

; 332  :                 while (INREG32(&pCmRegs->CM_IDLEST1_xxx) & CM_IDLEST_ST_I2C3);

  002e4	e5923000	 ldr         r3, [r2]
  002e8	e3130802	 tst         r3, #2, 16
  002ec	1afffffc	 bne         |$LL63@EnableDevi|

; 333  :                 }
; 334  :             else

  002f0	ea0000d3	 b           |$LN86@EnableDevi|
  002f4		 |$LN64@EnableDevi|

; 335  :                 {
; 336  :                 CLRREG32(&pCmRegs->CM_FCLKEN1_xxx, CM_CLKEN_I2C3);
; 337  :                 CLRREG32(&pCmRegs->CM_ICLKEN1_xxx, CM_CLKEN_I2C3);

  002f4	e3c33802	 bic         r3, r3, #2, 16
  002f8	e5803000	 str         r3, [r0]
  002fc	e5b03010	 ldr         r3, [r0, #0x10]!
  00300	e3c33802	 bic         r3, r3, #2, 16

; 338  :                 }
; 339  :             break;

  00304	ea0000cd	 b           |$LN116@EnableDevi|
  00308		 |$LN70@EnableDevi|
  00308	e3a03312	 mov         r3, #0x12, 6
  0030c	e3830c4a	 orr         r0, r3, #0x4A, 24
  00310	e3a01000	 mov         r1, #0
  00314	eb000000	 bl          OALPAtoVA
  00318	e5903000	 ldr         r3, [r0]
  0031c	e3540000	 cmp         r4, #0
  00320	0a000009	 beq         |$LN69@EnableDevi|
  00324	e3833801	 orr         r3, r3, #1, 16
  00328	e5803000	 str         r3, [r0]
  0032c	e2802020	 add         r2, r0, #0x20
  00330	e5b03010	 ldr         r3, [r0, #0x10]!
  00334	e3833801	 orr         r3, r3, #1, 16
  00338	e5803000	 str         r3, [r0]
  0033c		 |$LL68@EnableDevi|
  0033c	e5923000	 ldr         r3, [r2]
  00340	e3130801	 tst         r3, #1, 16
  00344	1afffffc	 bne         |$LL68@EnableDevi|

; 310  : 
; 311  :         case OMAP_DEVICE_I2C2:
; 312  :             pCmRegs = OALPAtoUA(OMAP_PRCM_CORE_CM_REGS_PA);
; 313  :             if (bEnable)
; 314  :                 {
; 315  :                 SETREG32(&pCmRegs->CM_FCLKEN1_xxx, CM_CLKEN_I2C2);
; 316  :                 SETREG32(&pCmRegs->CM_ICLKEN1_xxx, CM_CLKEN_I2C2);
; 317  :                 while (INREG32(&pCmRegs->CM_IDLEST1_xxx) & CM_IDLEST_ST_I2C2);
; 318  :                 }
; 319  :             else

  00348	ea0000bd	 b           |$LN86@EnableDevi|
  0034c		 |$LN69@EnableDevi|

; 320  :                 {
; 321  :                 CLRREG32(&pCmRegs->CM_FCLKEN1_xxx, CM_CLKEN_I2C2);
; 322  :                 CLRREG32(&pCmRegs->CM_ICLKEN1_xxx, CM_CLKEN_I2C2);

  0034c	e3c33801	 bic         r3, r3, #1, 16
  00350	e5803000	 str         r3, [r0]
  00354	e5b03010	 ldr         r3, [r0, #0x10]!
  00358	e3c33801	 bic         r3, r3, #1, 16

; 323  :                 }
; 324  :             break;

  0035c	ea0000b7	 b           |$LN116@EnableDevi|
  00360		 |$LN40@EnableDevi|
  00360	e3a03312	 mov         r3, #0x12, 6

; 415  : 
; 416  :         case OMAP_DEVICE_GPIO1:
; 417  :             pCmRegs = OALPAtoUA(OMAP_PRCM_WKUP_CM_REGS_PA);

  00364	e3830b13	 orr         r0, r3, #0x13, 22
  00368	e3a01000	 mov         r1, #0
  0036c	eb000000	 bl          OALPAtoVA

; 418  :             if (bEnable)
; 419  :                 {                
; 420  :                 SETREG32(&pCmRegs->CM_FCLKEN_xxx, CM_CLKEN_GPIO1);

  00370	e5903000	 ldr         r3, [r0]
  00374	e3540000	 cmp         r4, #0
  00378	0a0000ac	 beq         |$LN39@EnableDevi|

; 421  :                 SETREG32(&pCmRegs->CM_ICLKEN_xxx, CM_CLKEN_GPIO1);

  0037c	e3833008	 orr         r3, r3, #8
  00380	e5803000	 str         r3, [r0]
  00384	e2802020	 add         r2, r0, #0x20
  00388	e5b03010	 ldr         r3, [r0, #0x10]!
  0038c	e3833008	 orr         r3, r3, #8
  00390	e5803000	 str         r3, [r0]
  00394		 |$LL38@EnableDevi|

; 422  :                 while (INREG32(&pCmRegs->CM_IDLEST1_xxx) & CM_IDLEST_ST_GPIO1);

  00394	e5923000	 ldr         r3, [r2]
  00398	e3130008	 tst         r3, #8
  0039c	1afffffc	 bne         |$LL38@EnableDevi|

; 423  :                 }
; 424  :             else

  003a0	ea0000a7	 b           |$LN86@EnableDevi|
  003a4		 |$LN95@EnableDevi|

; 229  :     OMAP_CM_REGS* pCmRegs;
; 230  : 
; 231  :     switch (devId)

  003a4	e3500031	 cmp         r0, #0x31
  003a8	8a00005d	 bhi         |$LN97@EnableDevi|
  003ac	0a00004b	 beq         |$LN15@EnableDevi|
  003b0	e350002d	 cmp         r0, #0x2D
  003b4	0a000038	 beq         |$LN35@EnableDevi|
  003b8	e350002e	 cmp         r0, #0x2E
  003bc	0a000025	 beq         |$LN30@EnableDevi|
  003c0	e350002f	 cmp         r0, #0x2F
  003c4	0a000012	 beq         |$LN25@EnableDevi|
  003c8	e3500030	 cmp         r0, #0x30
  003cc	1a00009c	 bne         |$LN86@EnableDevi|
  003d0	e3a03312	 mov         r3, #0x12, 6

; 475  : 
; 476  :         case OMAP_DEVICE_GPIO5:
; 477  :             pCmRegs = OALPAtoUA(OMAP_PRCM_PER_CM_REGS_PA);

  003d4	e3830a05	 orr         r0, r3, #5, 20
  003d8	e3a01000	 mov         r1, #0
  003dc	eb000000	 bl          OALPAtoVA

; 478  :             if (bEnable)
; 479  :                 {                
; 480  :                 SETREG32(&pCmRegs->CM_FCLKEN_xxx, CM_CLKEN_GPIO5);

  003e0	e5903000	 ldr         r3, [r0]
  003e4	e3540000	 cmp         r4, #0
  003e8	0affffd7	 beq         |$LN69@EnableDevi|

; 481  :                 SETREG32(&pCmRegs->CM_ICLKEN_xxx, CM_CLKEN_GPIO5);

  003ec	e3833801	 orr         r3, r3, #1, 16
  003f0	e5803000	 str         r3, [r0]
  003f4	e2802020	 add         r2, r0, #0x20
  003f8	e5b03010	 ldr         r3, [r0, #0x10]!
  003fc	e3833801	 orr         r3, r3, #1, 16
  00400	e5803000	 str         r3, [r0]
  00404		 |$LL18@EnableDevi|

; 482  :                 while (INREG32(&pCmRegs->CM_IDLEST1_xxx) & CM_IDLEST_ST_GPIO5);

  00404	e5923000	 ldr         r3, [r2]
  00408	e3130801	 tst         r3, #1, 16
  0040c	1afffffc	 bne         |$LL18@EnableDevi|

; 483  :                 }
; 484  :             else

  00410	ea00008b	 b           |$LN86@EnableDevi|
  00414		 |$LN25@EnableDevi|

; 485  :                 {
; 486  :                 CLRREG32(&pCmRegs->CM_FCLKEN_xxx, CM_CLKEN_GPIO5);
; 487  :                 CLRREG32(&pCmRegs->CM_ICLKEN_xxx, CM_CLKEN_GPIO5);
; 488  :                 }
; 489  :             break;

  00414	e3a03312	 mov         r3, #0x12, 6
  00418	e3830a05	 orr         r0, r3, #5, 20
  0041c	e3a01000	 mov         r1, #0
  00420	eb000000	 bl          OALPAtoVA
  00424	e5903000	 ldr         r3, [r0]
  00428	e3540000	 cmp         r4, #0
  0042c	0affff66	 beq         |$LN74@EnableDevi|
  00430	e3833902	 orr         r3, r3, #2, 18
  00434	e5803000	 str         r3, [r0]
  00438	e2802020	 add         r2, r0, #0x20
  0043c	e5b03010	 ldr         r3, [r0, #0x10]!
  00440	e3833902	 orr         r3, r3, #2, 18
  00444	e5803000	 str         r3, [r0]
  00448		 |$LL23@EnableDevi|
  00448	e5923000	 ldr         r3, [r2]
  0044c	e3130902	 tst         r3, #2, 18
  00450	1afffffc	 bne         |$LL23@EnableDevi|

; 460  : 
; 461  :         case OMAP_DEVICE_GPIO4:
; 462  :             pCmRegs = OALPAtoUA(OMAP_PRCM_PER_CM_REGS_PA);
; 463  :             if (bEnable)
; 464  :                 {                
; 465  :                 SETREG32(&pCmRegs->CM_FCLKEN_xxx, CM_CLKEN_GPIO4);
; 466  :                 SETREG32(&pCmRegs->CM_ICLKEN_xxx, CM_CLKEN_GPIO4);
; 467  :                 while (INREG32(&pCmRegs->CM_IDLEST1_xxx) & CM_IDLEST_ST_GPIO4);
; 468  :                 }
; 469  :             else

  00454	ea00007a	 b           |$LN86@EnableDevi|
  00458		 |$LN30@EnableDevi|

; 470  :                 {
; 471  :                 CLRREG32(&pCmRegs->CM_FCLKEN_xxx, CM_CLKEN_GPIO4);
; 472  :                 CLRREG32(&pCmRegs->CM_ICLKEN_xxx, CM_CLKEN_GPIO4);
; 473  :                 }
; 474  :             break;

  00458	e3a03312	 mov         r3, #0x12, 6
  0045c	e3830a05	 orr         r0, r3, #5, 20
  00460	e3a01000	 mov         r1, #0
  00464	eb000000	 bl          OALPAtoVA
  00468	e5903000	 ldr         r3, [r0]
  0046c	e3540000	 cmp         r4, #0
  00470	0affff03	 beq         |$LN54@EnableDevi|
  00474	e3833901	 orr         r3, r3, #1, 18
  00478	e5803000	 str         r3, [r0]
  0047c	e2802020	 add         r2, r0, #0x20
  00480	e5b03010	 ldr         r3, [r0, #0x10]!
  00484	e3833901	 orr         r3, r3, #1, 18
  00488	e5803000	 str         r3, [r0]
  0048c		 |$LL28@EnableDevi|
  0048c	e5923000	 ldr         r3, [r2]
  00490	e3130901	 tst         r3, #1, 18
  00494	1afffffc	 bne         |$LL28@EnableDevi|

; 445  : 
; 446  :         case OMAP_DEVICE_GPIO3:
; 447  :             pCmRegs = OALPAtoUA(OMAP_PRCM_PER_CM_REGS_PA);
; 448  :             if (bEnable)
; 449  :                 {                
; 450  :                 SETREG32(&pCmRegs->CM_FCLKEN_xxx, CM_CLKEN_GPIO3);
; 451  :                 SETREG32(&pCmRegs->CM_ICLKEN_xxx, CM_CLKEN_GPIO3);
; 452  :                 while (INREG32(&pCmRegs->CM_IDLEST1_xxx) & CM_IDLEST_ST_GPIO3);
; 453  :                 }
; 454  :             else

  00498	ea000069	 b           |$LN86@EnableDevi|
  0049c		 |$LN35@EnableDevi|

; 455  :                 {
; 456  :                 CLRREG32(&pCmRegs->CM_FCLKEN_xxx, CM_CLKEN_GPIO3);
; 457  :                 CLRREG32(&pCmRegs->CM_ICLKEN_xxx, CM_CLKEN_GPIO3);
; 458  :                 }
; 459  :             break;

  0049c	e3a03312	 mov         r3, #0x12, 6
  004a0	e3830a05	 orr         r0, r3, #5, 20
  004a4	e3a01000	 mov         r1, #0
  004a8	eb000000	 bl          OALPAtoVA
  004ac	e5903000	 ldr         r3, [r0]
  004b0	e3540000	 cmp         r4, #0
  004b4	0affff08	 beq         |$LN59@EnableDevi|
  004b8	e3833a02	 orr         r3, r3, #2, 20
  004bc	e5803000	 str         r3, [r0]
  004c0	e2802020	 add         r2, r0, #0x20
  004c4	e5b03010	 ldr         r3, [r0, #0x10]!
  004c8	e3833a02	 orr         r3, r3, #2, 20
  004cc	e5803000	 str         r3, [r0]
  004d0		 |$LL33@EnableDevi|
  004d0	e5923000	 ldr         r3, [r2]
  004d4	e3130a02	 tst         r3, #2, 20
  004d8	1afffffc	 bne         |$LL33@EnableDevi|

; 425  :                 {
; 426  :                 CLRREG32(&pCmRegs->CM_FCLKEN_xxx, CM_CLKEN_GPIO1);
; 427  :                 CLRREG32(&pCmRegs->CM_ICLKEN_xxx, CM_CLKEN_GPIO1);
; 428  :                 }
; 429  :             break;
; 430  : 
; 431  :         case OMAP_DEVICE_GPIO2:
; 432  :             pCmRegs = OALPAtoUA(OMAP_PRCM_PER_CM_REGS_PA);
; 433  :             if (bEnable)
; 434  :                 {                
; 435  :                 SETREG32(&pCmRegs->CM_FCLKEN_xxx, CM_CLKEN_GPIO2);
; 436  :                 SETREG32(&pCmRegs->CM_ICLKEN_xxx, CM_CLKEN_GPIO2);
; 437  :                 while (INREG32(&pCmRegs->CM_IDLEST1_xxx) & CM_IDLEST_ST_GPIO2);
; 438  :                 }
; 439  :             else

  004dc	ea000058	 b           |$LN86@EnableDevi|
  004e0		 |$LN15@EnableDevi|

; 440  :                 {
; 441  :                 CLRREG32(&pCmRegs->CM_FCLKEN_xxx, CM_CLKEN_GPIO2);
; 442  :                 CLRREG32(&pCmRegs->CM_ICLKEN_xxx, CM_CLKEN_GPIO2);
; 443  :                 }
; 444  :             break;

  004e0	e3a03312	 mov         r3, #0x12, 6

; 490  : 
; 491  :         case OMAP_DEVICE_GPIO6:
; 492  :             pCmRegs = OALPAtoUA(OMAP_PRCM_PER_CM_REGS_PA);

  004e4	e3830a05	 orr         r0, r3, #5, 20
  004e8	e3a01000	 mov         r1, #0
  004ec	eb000000	 bl          OALPAtoVA

; 493  :             if (bEnable)
; 494  :                 {                
; 495  :                 SETREG32(&pCmRegs->CM_FCLKEN_xxx, CM_CLKEN_GPIO6);

  004f0	e5903000	 ldr         r3, [r0]
  004f4	e3540000	 cmp         r4, #0
  004f8	0affff7d	 beq         |$LN64@EnableDevi|

; 496  :                 SETREG32(&pCmRegs->CM_ICLKEN_xxx, CM_CLKEN_GPIO6);

  004fc	e3833802	 orr         r3, r3, #2, 16
  00500	e5803000	 str         r3, [r0]
  00504	e2802020	 add         r2, r0, #0x20
  00508	e5b03010	 ldr         r3, [r0, #0x10]!
  0050c	e3833802	 orr         r3, r3, #2, 16
  00510	e5803000	 str         r3, [r0]
  00514		 |$LL13@EnableDevi|

; 497  :                 while (INREG32(&pCmRegs->CM_IDLEST1_xxx) & CM_IDLEST_ST_GPIO6);

  00514	e5923000	 ldr         r3, [r2]
  00518	e3130802	 tst         r3, #2, 16
  0051c	1afffffc	 bne         |$LL13@EnableDevi|

; 498  :                 }
; 499  :             else

  00520	ea000047	 b           |$LN86@EnableDevi|
  00524		 |$LN97@EnableDevi|

; 229  :     OMAP_CM_REGS* pCmRegs;
; 230  : 
; 231  :     switch (devId)

  00524	e3500035	 cmp         r0, #0x35
  00528	0a00002f	 beq         |$LN90@EnableDevi|
  0052c	e350003d	 cmp         r0, #0x3D
  00530	0a000017	 beq         |$LN50@EnableDevi|
  00534	e350004f	 cmp         r0, #0x4F
  00538	1a000041	 bne         |$LN86@EnableDevi|
  0053c	e3a03312	 mov         r3, #0x12, 6

; 400  : 
; 401  :         case OMAP_DEVICE_UART4:
; 402  :             pCmRegs = OALPAtoUA(OMAP_PRCM_PER_CM_REGS_PA);

  00540	e3830a05	 orr         r0, r3, #5, 20
  00544	e3a01000	 mov         r1, #0
  00548	eb000000	 bl          OALPAtoVA

; 403  :             if (bEnable)
; 404  :                 {                
; 405  :                 SETREG32(&pCmRegs->CM_FCLKEN_xxx, CM_CLKEN_UART4);

  0054c	e5903000	 ldr         r3, [r0]
  00550	e3540000	 cmp         r4, #0
  00554	0a000009	 beq         |$LN44@EnableDevi|

; 406  :                 SETREG32(&pCmRegs->CM_ICLKEN_xxx, CM_CLKEN_UART4);

  00558	e3833701	 orr         r3, r3, #1, 14
  0055c	e5803000	 str         r3, [r0]
  00560	e2802020	 add         r2, r0, #0x20
  00564	e5b03010	 ldr         r3, [r0, #0x10]!
  00568	e3833701	 orr         r3, r3, #1, 14
  0056c	e5803000	 str         r3, [r0]
  00570		 |$LL43@EnableDevi|

; 407  :                 while (INREG32(&pCmRegs->CM_IDLEST1_xxx) & CM_IDLEST_ST_UART4);

  00570	e5923000	 ldr         r3, [r2]
  00574	e3130701	 tst         r3, #1, 14
  00578	1afffffc	 bne         |$LL43@EnableDevi|

; 408  :                 }
; 409  :             else

  0057c	ea000030	 b           |$LN86@EnableDevi|
  00580		 |$LN44@EnableDevi|

; 410  :                 {
; 411  :                 CLRREG32(&pCmRegs->CM_FCLKEN_xxx, CM_CLKEN_UART4);
; 412  :                 CLRREG32(&pCmRegs->CM_ICLKEN_xxx, CM_CLKEN_UART4);

  00580	e3c33701	 bic         r3, r3, #1, 14
  00584	e5803000	 str         r3, [r0]
  00588	e5b03010	 ldr         r3, [r0, #0x10]!
  0058c	e3c33701	 bic         r3, r3, #1, 14

; 413  :                 }
; 414  :             break;

  00590	ea00002a	 b           |$LN116@EnableDevi|
  00594		 |$LN50@EnableDevi|
  00594	e3a03312	 mov         r3, #0x12, 6
  00598	e3830a05	 orr         r0, r3, #5, 20
  0059c	e3a01000	 mov         r1, #0
  005a0	eb000000	 bl          OALPAtoVA
  005a4	e5903000	 ldr         r3, [r0]
  005a8	e3540000	 cmp         r4, #0
  005ac	0a000009	 beq         |$LN49@EnableDevi|
  005b0	e3833b02	 orr         r3, r3, #2, 22
  005b4	e5803000	 str         r3, [r0]
  005b8	e2802020	 add         r2, r0, #0x20
  005bc	e5b03010	 ldr         r3, [r0, #0x10]!
  005c0	e3833b02	 orr         r3, r3, #2, 22
  005c4	e5803000	 str         r3, [r0]
  005c8		 |$LL48@EnableDevi|
  005c8	e5923000	 ldr         r3, [r2]
  005cc	e3130b02	 tst         r3, #2, 22
  005d0	1afffffc	 bne         |$LL48@EnableDevi|

; 385  : 
; 386  :         case OMAP_DEVICE_UART3:
; 387  :             pCmRegs = OALPAtoUA(OMAP_PRCM_PER_CM_REGS_PA);
; 388  :             if (bEnable)
; 389  :                 {                
; 390  :                 SETREG32(&pCmRegs->CM_FCLKEN_xxx, CM_CLKEN_UART3);
; 391  :                 SETREG32(&pCmRegs->CM_ICLKEN_xxx, CM_CLKEN_UART3);
; 392  :                 while (INREG32(&pCmRegs->CM_IDLEST1_xxx) & CM_IDLEST_ST_UART3);
; 393  :                 }
; 394  :             else

  005d4	ea00001a	 b           |$LN86@EnableDevi|
  005d8		 |$LN49@EnableDevi|

; 395  :                 {
; 396  :                 CLRREG32(&pCmRegs->CM_FCLKEN_xxx, CM_CLKEN_UART3);
; 397  :                 CLRREG32(&pCmRegs->CM_ICLKEN_xxx, CM_CLKEN_UART3);

  005d8	e3c33b02	 bic         r3, r3, #2, 22
  005dc	e5803000	 str         r3, [r0]
  005e0	e5b03010	 ldr         r3, [r0, #0x10]!
  005e4	e3c33b02	 bic         r3, r3, #2, 22

; 398  :                 }
; 399  :             break;

  005e8	ea000014	 b           |$LN116@EnableDevi|
  005ec		 |$LN90@EnableDevi|
  005ec	e3a03312	 mov         r3, #0x12, 6
  005f0	e3830a05	 orr         r0, r3, #5, 20
  005f4	e3a01000	 mov         r1, #0
  005f8	eb000000	 bl          OALPAtoVA
  005fc	e5903000	 ldr         r3, [r0]
  00600	e3540000	 cmp         r4, #0
  00604	0a000009	 beq         |$LN39@EnableDevi|
  00608	e3833008	 orr         r3, r3, #8
  0060c	e5803000	 str         r3, [r0]
  00610	e2802020	 add         r2, r0, #0x20
  00614	e5b03010	 ldr         r3, [r0, #0x10]!
  00618	e3833008	 orr         r3, r3, #8
  0061c	e5803000	 str         r3, [r0]
  00620		 |$LL88@EnableDevi|
  00620	e5923000	 ldr         r3, [r2]
  00624	e3130008	 tst         r3, #8
  00628	1afffffc	 bne         |$LL88@EnableDevi|

; 232  :         {
; 233  : /*
; 234  :         case OMAP_DEVICE_GPTIMER1:
; 235  :             pCmRegs = OALPAtoUA(OMAP_PRCM_WKUP_CM_REGS_PA);
; 236  :             if (bEnable)
; 237  :                 {                
; 238  :                 SETREG32(&pCmRegs->CM_FCLKEN_xxx, CM_CLKEN_GPT1);
; 239  :                 SETREG32(&pCmRegs->CM_ICLKEN_xxx, CM_CLKEN_GPT1);
; 240  :                 while (INREG32(&pCmRegs->CM_IDLEST1_xxx) & CM_IDLEST_ST_GPT1);
; 241  :                 }
; 242  :             else
; 243  :                 {
; 244  :                 CLRREG32(&pCmRegs->CM_FCLKEN1_xxx, CM_CLKEN_GPT1);
; 245  :                 CLRREG32(&pCmRegs->CM_ICLKEN1_xxx, CM_CLKEN_GPT1);
; 246  :                 }
; 247  :             break;
; 248  : */        
; 249  : 
; 250  :         case OMAP_DEVICE_GPTIMER2:
; 251  :             pCmRegs = OALPAtoUA(OMAP_PRCM_PER_CM_REGS_PA);
; 252  :             if (bEnable)
; 253  :                 {                
; 254  :                 SETREG32(&pCmRegs->CM_FCLKEN_xxx, CM_CLKEN_GPT2);
; 255  :                 SETREG32(&pCmRegs->CM_ICLKEN_xxx, CM_CLKEN_GPT2);
; 256  :                 while (INREG32(&pCmRegs->CM_IDLEST1_xxx) & CM_IDLEST_ST_GPT2);
; 257  :                 }
; 258  :             else

  0062c	ea000004	 b           |$LN86@EnableDevi|
  00630		 |$LN39@EnableDevi|

; 259  :                 {
; 260  :                 CLRREG32(&pCmRegs->CM_FCLKEN_xxx, CM_CLKEN_GPT2);
; 261  :                 CLRREG32(&pCmRegs->CM_ICLKEN_xxx, CM_CLKEN_GPT2);

  00630	e3c33008	 bic         r3, r3, #8
  00634	e5803000	 str         r3, [r0]
  00638	e5b03010	 ldr         r3, [r0, #0x10]!
  0063c	e3c33008	 bic         r3, r3, #8
  00640		 |$LN116@EnableDevi|
  00640	e5803000	 str         r3, [r0]
  00644		 |$LN86@EnableDevi|

; 547  : /*
; 548  :         case OMAP_DEVICE_D2D:
; 549  :             pCmRegs = OALPAtoUA(OMAP_PRCM_CORE_CM_REGS_PA);
; 550  :             if (bEnable)
; 551  :                 {
; 552  :                 SETREG32(&pCmRegs->CM_ICLKEN1_xxx, CM_CLKEN_D2D);
; 553  :                 while (INREG32(&pCmRegs->CM_IDLEST1_xxx) & CM_IDLEST_ST_D2D);
; 554  :                 }
; 555  :             else
; 556  :                 {
; 557  :                 CLRREG32(&pCmRegs->CM_ICLKEN1_xxx, CM_CLKEN_D2D);
; 558  :                 }
; 559  :             break;
; 560  : */    
; 561  :         }
; 562  :     return TRUE;

  00644	e3a00001	 mov         r0, #1

; 563  : }

  00648	e8bd4010	 ldmia       sp!, {r4, lr}
  0064c	e12fff1e	 bx          lr
  00650		 |$M46711|

			 ENDP  ; |EnableDeviceClocks|

	EXPORT	|PrcmDeviceGetContextState|

  00000			 AREA	 |.pdata|, PDATA
|$T46722| DCD	|$LN5@PrcmDevice|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PrcmDeviceGetContextState| PROC

; 571  : {

  00000		 |$LN5@PrcmDevice|
  00000		 |$M46719|

; 572  :     UNREFERENCED_PARAMETER(devId);
; 573  :     UNREFERENCED_PARAMETER(bSet);
; 574  :     return TRUE;

  00000	e3a00001	 mov         r0, #1

; 575  : 
; 576  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M46720|

			 ENDP  ; |PrcmDeviceGetContextState|

	EXPORT	|EnableDeviceClocksNoRefCount|

  00000			 AREA	 |.pdata|, PDATA
|$T46733| DCD	|$LN5@EnableDevi@2|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |EnableDeviceClocksNoRefCount| PROC

; 583  : {

  00000		 |$LN5@EnableDevi@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M46730|

; 584  : 	return EnableDeviceClocks( devId, bEnable );

  00004	eb000000	 bl          EnableDeviceClocks

; 585  : }

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M46731|

			 ENDP  ; |EnableDeviceClocksNoRefCount|

	EXPORT	|BusClockRelease|

  00000			 AREA	 |.pdata|, PDATA
|$T46743| DCD	|$LN5@BusClockRe|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BusClockRelease| PROC

; 592  : {

  00000		 |$LN5@BusClockRe|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M46740|
  00004	e1a00001	 mov         r0, r1

; 593  : //    RETAILMSG(1,(TEXT("clockrelease %d\r\n"),id));
; 594  :     UNREFERENCED_PARAMETER(hBus);
; 595  :     return EnableDeviceClocks(id,FALSE);

  00008	e3a01000	 mov         r1, #0
  0000c	eb000000	 bl          EnableDeviceClocks

; 596  : }

  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$M46741|

			 ENDP  ; |BusClockRelease|

	EXPORT	|BusClockRequest|

  00000			 AREA	 |.pdata|, PDATA
|$T46753| DCD	|$LN5@BusClockRe@2|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BusClockRequest| PROC

; 603  : {

  00000		 |$LN5@BusClockRe@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M46750|
  00004	e1a00001	 mov         r0, r1

; 604  : //    RETAILMSG(1,(TEXT("clockrequest %d\r\n"),id));
; 605  :     UNREFERENCED_PARAMETER(hBus);
; 606  :     return EnableDeviceClocks(id,TRUE);

  00008	e3a01001	 mov         r1, #1
  0000c	eb000000	 bl          EnableDeviceClocks

; 607  : }

  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$M46751|

			 ENDP  ; |BusClockRequest|

	EXPORT	|MmUnmapIoSpace|

  00000			 AREA	 |.pdata|, PDATA
|$T46760| DCD	|$LN5@MmUnmapIoS|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |MmUnmapIoSpace| PROC

; 613  : {

  00000		 |$LN5@MmUnmapIoS|
  00000		 |$M46757|

; 614  :     UNREFERENCED_PARAMETER(BaseAddress);
; 615  :     UNREFERENCED_PARAMETER(NumberOfBytes);
; 616  : }

  00000	e12fff1e	 bx          lr
  00004		 |$M46758|

			 ENDP  ; |MmUnmapIoSpace|

	EXPORT	|MmMapIoSpace|

  00000			 AREA	 |.pdata|, PDATA
|$T46771| DCD	|$LN5@MmMapIoSpa|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |MmMapIoSpace| PROC

; 623  : {

  00000		 |$LN5@MmMapIoSpa|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M46768|

; 624  :     UNREFERENCED_PARAMETER(NumberOfBytes);
; 625  :     return OALPAtoVA(PhysicalAddress.LowPart,CacheEnable);

  00004	e1a01003	 mov         r1, r3
  00008	eb000000	 bl          OALPAtoVA

; 626  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M46769|

			 ENDP  ; |MmMapIoSpace|

	EXPORT	|CreateBusAccessHandle|

  00000			 AREA	 |.pdata|, PDATA
|$T46780| DCD	|$LN5@CreateBusA|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |CreateBusAccessHandle| PROC

; 631  : {    

  00000		 |$LN5@CreateBusA|
  00000		 |$M46777|

; 632  :     UNREFERENCED_PARAMETER(lpActiveRegPath);
; 633  :     return (HANDLE) 0xAA;

  00000	e3a000aa	 mov         r0, #0xAA

; 634  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M46778|

			 ENDP  ; |CreateBusAccessHandle|

	EXPORT	|HalContextUpdateDirtyRegister|

  00000			 AREA	 |.pdata|, PDATA
|$T46787| DCD	|$LN5@HalContext|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HalContextUpdateDirtyRegister| PROC

; 640  : {

  00000		 |$LN5@HalContext|
  00000		 |$M46784|

; 641  :     UNREFERENCED_PARAMETER(ffRegister);
; 642  : }

  00000	e12fff1e	 bx          lr
  00004		 |$M46785|

			 ENDP  ; |HalContextUpdateDirtyRegister|

	END
